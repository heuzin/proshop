{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","components/Meta.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAdress","item","existItem","find","x","map","filter","shippingAddress","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","disptatch","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","active","Meta","description","keywords","Helmet","content","listProducts","pageNumber","res","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","match","params","disptach","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","ListGroup","countInStock","ListGroupItem","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","console","log","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"gLAAaA,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBAEpBC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAAuB,uBAEvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBAEtBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAEvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAEvBC,EAAgC,gCAChCC,EAAgC,gCAChCC,EAA6B,6BAC7BC,EAA8B,8BAE9BC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mB,QC7BnBC,EAAgB,gBAChBC,EAAmB,mBAEnBC,EAA6B,6BAC7BC,EAA2B,2BCJ3BC,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAkB,kBAClBC,EAAc,cAEdC,EAAwB,wBACxBC,EAAwB,wBACxBC,EAAqB,qBAErBC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBACpBC,EAAqB,qBAErBC,EAA8B,8BAC9BC,EAA8B,8BAC9BC,EAA2B,2BAC3BC,GAA4B,4BAE5BC,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAiB,iBACjBC,GAAkB,kBAElBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBAEnBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBACnBC,GAAoB,oBC/BpBC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBAEpBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBAErBC,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAiB,iBACjBC,GAAkB,kBAElBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBAEtBC,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAkB,kBAElBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBCM7BC,GAAUC,0BAAgB,CAC5BC,YCL8B,WAAuC,IAAtCC,EAAqC,uDAA7B,CAAEC,SAAU,IAAMC,EAAW,uCACpE,OAAOA,EAAOC,MACV,KAAKjF,EACD,MAAO,CACHkF,SAAS,EACTH,SAAU,IAElB,KAAK9E,EACD,MAAO,CACHiF,SAAS,EACTH,SAAUC,EAAOG,QAAQJ,SACzBK,MAAOJ,EAAOG,QAAQC,MACtBC,KAAML,EAAOG,QAAQE,MAE7B,KAAKnF,EACD,MAAO,CACHgF,SAAS,EACTI,MAAON,EAAOG,SAEtB,QACI,OAAOL,IDdfS,eCkBiC,WAAmD,IAAlDT,EAAiD,uDAAzC,CAAEU,QAAS,CAAEC,QAAS,KAAQT,EAAW,uCACnF,OAAOA,EAAOC,MACV,KAAK9E,EACD,OAAO,aACH+E,SAAS,GACNJ,GAEX,KAAK1E,EACD,MAAO,CACH8E,SAAS,EACTM,QAASR,EAAOG,SAExB,KAAK9E,EACD,MAAO,CACH6E,SAAS,EACTI,MAAON,EAAOG,SAEtB,QACI,OAAOL,IDnCfY,cCuCgC,WAAyB,IAAxBZ,EAAuB,uDAAf,GAAIE,EAAW,uCACxD,OAAOA,EAAOC,MACV,KAAK3E,EACD,MAAO,CACH4E,SAAS,GAEjB,KAAK3E,EACD,MAAO,CACH2E,SAAS,EACTS,SAAS,GAEjB,KAAKnF,EACD,MAAO,CACH0E,SAAS,EACTI,MAAON,EAAOG,SAEtB,QACI,OAAOL,IDvDfc,cC2DgC,WAAyB,IAAxBd,EAAuB,uDAAf,GAAIE,EAAW,uCACxD,OAAOA,EAAOC,MACV,KAAKxE,EACD,MAAO,CACHyE,SAAS,GAEjB,KAAKxE,EACD,MAAO,CACHwE,SAAS,EACTS,SAAS,EACTH,QAASR,EAAOG,SAExB,KAAKxE,EACD,MAAO,CACHuE,SAAS,EACTI,MAAON,EAAOG,SAEtB,KAAKvE,EACD,MAAO,GACX,QACI,OAAOkE,ID9Efe,cCkFgC,WAAsC,IAArCf,EAAoC,uDAA5B,CAAEU,QAAS,IAAMR,EAAW,uCACrE,OAAOA,EAAOC,MACV,KAAKpE,EACD,MAAO,CACHqE,SAAS,GAEjB,KAAKpE,EACD,MAAO,CACHoE,SAAS,EACTS,SAAS,EACTH,QAASR,EAAOG,SAExB,KAAKpE,EACD,MAAO,CACHmE,SAAS,EACTI,MAAON,EAAOG,SAEtB,KAAKnE,EACD,MAAO,CAAEwE,QAAS,IACtB,QACI,OAAOV,IDrGfgB,oBCyGsC,WAAyB,IAAxBhB,EAAuB,uDAAf,GAAIE,EAAW,uCAC9D,OAAOA,EAAOC,MACV,KAAKhE,EACD,MAAO,CACHiE,SAAS,GAEjB,KAAKhE,EACD,MAAO,CACHgE,SAAS,EACTS,SAAS,GAEjB,KAAKxE,EACD,MAAO,CACH+D,SAAS,EACTI,MAAON,EAAOG,SAEtB,KAAK/D,EACD,MAAO,GACX,QACI,OAAO0D,ID3HfiB,gBC+HkC,WAAuC,IAAtCjB,EAAqC,uDAA7B,CAAEC,SAAU,IAAMC,EAAW,uCACxE,OAAOA,EAAOC,MACV,KAAK5D,EACD,MAAO,CACH6D,SAAS,EACTH,SAAU,IAElB,KAAKzD,EACD,MAAO,CACH4D,SAAS,EACTH,SAAUC,EAAOG,SAEzB,KAAK5D,EACD,MAAO,CACH2D,SAAS,EACTI,MAAON,EAAOG,SAEtB,QACI,OAAOL,IDhJfkB,KErCuB,WAA4D,IAA3DlB,EAA0D,uDAAlD,CAAEmB,UAAW,GAAIC,eAAgB,IAAMlB,EAAW,uCAClF,OAAOA,EAAOC,MACV,KAAKzD,EACD,IAAM2E,EAAOnB,EAAOG,QAEdiB,EAAYtB,EAAMmB,UAAUI,MAAK,SAAAC,GAAC,OAAIA,EAAEd,UAAYW,EAAKX,WAE/D,OAAGY,EACQ,2BACAtB,GADP,IAEImB,UAAWnB,EAAMmB,UAAUM,KAAI,SAAAD,GAAC,OAC5BA,EAAEd,UAAYY,EAAUZ,QAAUW,EAAOG,OAI1C,2BACAxB,GADP,IAEImB,UAAU,GAAD,mBAAMnB,EAAMmB,WAAZ,CAAuBE,MAGxC,KAAK1E,EACD,OAAO,2BACAqD,GADP,IAEImB,UAAWnB,EAAMmB,UAAUO,QAAO,SAAAL,GAAI,OAAIA,EAAKX,UAAYR,EAAOG,aAE1E,KAAKzD,EACD,OAAO,2BACAoD,GADP,IAEI2B,gBAAiBzB,EAAOG,UAEhC,KAAKxD,EACD,OAAO,2BACAmD,GADP,IAEI4B,cAAe1B,EAAOG,UAElC,QACI,OAAOL,IFEf6B,UGX4B,WAAyB,IAAxB7B,EAAuB,uDAAf,GAAIE,EAAW,uCACpD,OAAQA,EAAOC,MACX,KAAKrD,EACD,MAAO,CACHsD,SAAS,GAEjB,KAAKrD,EACD,MAAO,CACHqD,SAAS,EACT0B,SAAU5B,EAAOG,SAEzB,KAAKrD,EACD,MAAO,CACHoD,SAAS,EACTI,MAAON,EAAOG,SAEtB,KAAKpD,EACD,MAAO,GACX,QACI,OAAO+C,IHPf+B,aGW+B,WAAyB,IAAxB/B,EAAuB,uDAAf,GAAIE,EAAW,uCACvD,OAAQA,EAAOC,MACX,KAAKjD,EACD,MAAO,CACHkD,SAAS,GAEjB,KAAKjD,EACD,MAAO,CACHiD,SAAS,EACT0B,SAAU5B,EAAOG,SAEzB,KAAKjD,EACD,MAAO,CACHgD,SAAS,EACTI,MAAON,EAAOG,SAEtB,QACI,OAAOL,IH3BfgC,YG+B8B,WAAmC,IAAlChC,EAAiC,uDAAzB,CAAEiC,KAAM,IAAM/B,EAAW,uCAChE,OAAQA,EAAOC,MACX,KAAK9C,EACD,OAAO,2BACA2C,GADP,IAEII,SAAS,IAEjB,KAAK9C,EACD,MAAO,CACH8C,SAAS,EACT6B,KAAM/B,EAAOG,SAErB,KAAK9C,EACF,MAAO,CACF6C,SAAS,EACTI,MAAON,EAAOG,SAEtB,KAAK7C,EACD,MAAO,CACHyE,KAAM,IAEd,QACI,OAAOjC,IHpDfkC,kBGwDoC,WAAmC,IAAlClC,EAAiC,uDAAzB,CAAEiC,KAAM,IAAM/B,EAAW,uCACtE,OAAQA,EAAOC,MACX,KAAK1C,EACD,MAAO,CACH2C,SAAS,GAEjB,KAAK1C,EACD,MAAO,CACH0C,SAAS,EACTS,SAAS,EACTiB,SAAU5B,EAAOG,SAEzB,KAAK1C,EACF,MAAO,CACFyC,SAAS,EACTI,MAAON,EAAOG,SAEtB,KAAKzC,GACD,MAAO,GACX,QACI,OAAOoC,IH3EfmC,SG+E2B,WAAoC,IAAnCnC,EAAkC,uDAA1B,CAAEoC,MAAO,IAAMlC,EAAW,uCAC9D,OAAQA,EAAOC,MACX,KAAKtC,GACD,MAAO,CACHuC,SAAS,GAEjB,KAAKtC,GACD,MAAO,CACHsC,SAAS,EACTgC,MAAOlC,EAAOG,SAEtB,KAAKtC,GACF,MAAO,CACFqC,SAAS,EACTI,MAAON,EAAOG,SAEtB,KAAKrC,GACD,MAAO,CACHoE,MAAO,IAEf,QACI,OAAOpC,IHnGfqC,WGuG6B,WAAyB,IAAxBrC,EAAuB,uDAAf,GAAIE,EAAW,uCACrD,OAAQA,EAAOC,MACX,KAAKlC,GACD,MAAO,CACHmC,SAAS,GAEjB,KAAKlC,GACD,MAAO,CACHkC,SAAS,EACTS,SAAS,GAEjB,KAAK1C,GACF,MAAO,CACFiC,SAAS,EACTI,MAAON,EAAOG,SAEtB,QACI,OAAOL,IHvHfsC,WG2H6B,WAAmC,IAAlCtC,EAAiC,uDAAzB,CAAEiC,KAAM,IAAM/B,EAAW,uCAC/D,OAAQA,EAAOC,MACX,KAAK/B,GACD,MAAO,CACHgC,SAAS,GAEjB,KAAK/B,GACD,MAAO,CACH+B,SAAS,EACTS,SAAS,GAEjB,KAAKvC,GACF,MAAO,CACF8B,SAAS,EACTI,MAAON,EAAOG,SAEtB,KAAK9B,GACD,MAAO,CACH0D,KAAM,IAEd,QACI,OAAOjC,IH/IfuC,YIvB8B,WAAyB,IAAxBvC,EAAuB,uDAAf,GAAIE,EAAW,uCACtD,OAAOA,EAAOC,MACV,KAAK3B,GACD,MAAO,CACH4B,SAAS,GAEjB,KAAK3B,GACD,MAAO,CACH2B,SAAS,EACTS,SAAS,EACT2B,MAAOtC,EAAOG,SAEtB,KAAK3B,GACD,MAAO,CACH0B,SAAS,EACTI,MAAON,EAAOG,SAEtB,QACI,OAAOL,IJMfyC,aIF+B,WAA6E,IAA5EzC,EAA2E,uDAAnE,CAAEI,SAAS,EAAMsC,WAAY,GAAIf,gBAAiB,IAAMzB,EAAW,uCAC3G,OAAOA,EAAOC,MACV,KAAKxB,GACD,OAAO,2BACAqB,GADP,IAEII,SAAS,IAEjB,KAAKxB,GACD,MAAO,CACHwB,SAAS,EACToC,MAAOtC,EAAOG,SAEtB,KAAKxB,GACD,MAAO,CACHuB,SAAS,EACTI,MAAON,EAAOG,SAEtB,QACI,OAAOL,IJff2C,SImB2B,WAAyB,IAAxB3C,EAAuB,uDAAf,GAAIE,EAAW,uCACnD,OAAOA,EAAOC,MACV,KAAKrB,GACD,MAAO,CACHsB,SAAS,GAEjB,KAAKrB,GACD,MAAO,CACHqB,SAAS,EACTS,SAAS,GAEjB,KAAK7B,GACD,MAAO,CACHoB,SAAS,EACTI,MAAON,EAAOG,SAEtB,KAAKpB,GACD,MAAO,GACX,QACI,OAAOe,IJrCf4C,aIuF+B,WAAyB,IAAxB5C,EAAuB,uDAAf,GAAIE,EAAW,uCACvD,OAAOA,EAAOC,MACV,KAAKV,GACD,MAAO,CACHW,SAAS,GAEjB,KAAKV,GACD,MAAO,CACHU,SAAS,EACTS,SAAS,GAEjB,KAAKlB,GACD,MAAO,CACHS,SAAS,EACTI,MAAON,EAAOG,SAEtB,KAAKT,GACD,MAAO,GACX,QACI,OAAOI,IJzGf6C,YIwC8B,WAAqC,IAApC7C,EAAmC,uDAA3B,CAAE8C,OAAQ,IAAM5C,EAAW,uCAClE,OAAOA,EAAOC,MACV,KAAKjB,GACD,MAAO,CACHkB,SAAS,GAEjB,KAAKjB,GACD,MAAO,CACHiB,SAAS,EACT0C,OAAQ5C,EAAOG,SAEvB,KAAKjB,GACD,MAAO,CACHgB,SAAS,EACTI,MAAON,EAAOG,SAEtB,KAAKhB,GACD,MAAO,CACHyD,OAAQ,IAEhB,QACI,OAAO9C,IJ5Df+C,UIgE4B,WAAqC,IAApC/C,EAAmC,uDAA3B,CAAE8C,OAAQ,IAAM5C,EAAW,uCAChE,OAAOA,EAAOC,MACV,KAAKb,GACD,MAAO,CACHc,SAAS,GAEjB,KAAKb,GACD,MAAO,CACHa,SAAS,EACT0C,OAAQ5C,EAAOG,SAEvB,KAAKb,GACD,MAAO,CACHY,SAAS,EACTI,MAAON,EAAOG,SAEtB,QACI,OAAOL,MJ9EbgD,GAAuBC,aAAaC,QAAQ,aAAeC,KAAKC,MAAMH,aAAaC,QAAQ,cAAgB,GAC3GG,GAAsBJ,aAAaC,QAAQ,YAAcC,KAAKC,MAAMH,aAAaC,QAAQ,aAAe,KAGxGI,GAAe,CACjBpC,KAAM,CACFC,UAAW6B,GACXrB,gBAL2BsB,aAAaC,QAAQ,mBAAqBC,KAAKC,MAAMH,aAAaC,QAAQ,oBAAsB,IAO/HrB,UAAW,CAAEC,SAAUuB,KAGrBE,GAAa,CAACC,KAQLC,GANDC,sBACV7D,GACAyD,GACAK,8BAAoBC,kBAAe,WAAf,EAAmBL,M,oHKxC5BM,GA7BG,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjB,EAA8BC,mBAAS,IAAvC,oBAAOC,EAAP,KAAgBC,EAAhB,KAYA,OACI,gBAACC,GAAA,EAAD,CAAMC,SAXY,SAACC,GACnBA,EAAEC,iBAECL,EAAQM,OACPR,EAAQS,KAAR,kBAAwBP,IAExBF,EAAQS,KAAK,MAKcC,QAAM,EAArC,UACI,eAACN,GAAA,EAAKO,QAAN,CACItE,KAAK,OACLuE,KAAK,IACLC,SAAU,SAACP,GAAD,OAAMH,EAAWG,EAAEQ,OAAOC,QACpCC,YAAY,qBACZC,UAAU,oBAEd,eAACC,GAAA,EAAD,CAAQ7E,KAAK,SAAS8E,QAAQ,kBAAkBF,UAAU,MAA1D,wB,gDCoFCG,GAAiB,SAACC,GAAD,gDAAQ,WAAOC,EAAUC,GAAjB,wBAAAC,EAAA,sEAE9BF,EAAS,CACLjF,KAAM9C,IAHoB,EAMMgI,IAAfvD,EANS,EAMtBD,UAAaC,SAEfyD,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY3D,EAAS4D,SAXZ,SAePC,KAAMC,IAAN,qBACLT,GACdI,GAjB0B,gBAetBM,EAfsB,EAetBA,KAKRT,EAAS,CACLjF,KAAM7C,EACN+C,QAASwF,IAtBiB,kDAyB9BT,EAAS,CACLjF,KAAM5C,EACN8C,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA7Bc,0DAAR,yDC1CfC,GA3DA,WACX,IAAMC,EAAYC,cAGVpE,EADUqE,aAAY,SAAAnG,GAAK,OAAIA,EAAM6B,aACrCC,SAMR,OACI,kCACI,eAACsE,GAAA,EAAD,CAAQC,GAAG,OAAOpB,QAAQ,OAAOqB,OAAO,KAAKC,kBAAgB,EAA7D,SACI,gBAACC,GAAA,EAAD,WACI,eAAC,iBAAD,CAAeC,GAAG,IAAlB,SACI,eAACL,GAAA,EAAOM,MAAR,wBAEJ,eAACN,GAAA,EAAOO,OAAR,CAAeC,gBAAc,qBAC7B,gBAACR,GAAA,EAAOS,SAAR,CAAiB1B,GAAG,mBAApB,UACI,eAAC,KAAD,CAAO2B,OAAQ,gBAAGhD,EAAH,EAAGA,QAAH,OAAiB,eAAC,GAAD,CAAWA,QAASA,OACpD,gBAACiD,GAAA,EAAD,CAAKhC,UAAU,UAAf,UACI,eAAC,iBAAD,CAAe0B,GAAG,QAAlB,SACI,gBAACM,GAAA,EAAIC,KAAL,WAAU,oBAAGjC,UAAU,yBAAvB,YAEHjD,EACG,gBAACmF,GAAA,EAAD,CAAaC,MAAOpF,EAAS4C,KAAMS,GAAG,WAAtC,UACI,eAAC,iBAAD,CAAesB,GAAG,WAAlB,SACI,eAACQ,GAAA,EAAYE,KAAb,wBAEJ,eAACF,GAAA,EAAYE,KAAb,CAAkBC,QAvB5B,WAClBnB,GD+CoB,SAACb,GACzBnC,aAAaoE,WAAW,YACxBjC,EAAS,CAAEjF,KAAMlD,IACjBmI,EAAS,CAAEjF,KAAM3C,IACjB4H,EAAS,CAAEjF,KAAMd,KACjB+F,EAAS,CAAEjF,KAAMnC,SC9Be,uBAKR,eAAC,iBAAD,CAAeyI,GAAG,SAAlB,SACI,gBAACM,GAAA,EAAIC,KAAL,WAAU,oBAAGjC,UAAU,gBAAvB,eAGPjD,GAAYA,EAASwF,SAClB,gBAACL,GAAA,EAAD,CAAaC,MAAM,QAAQ/B,GAAG,YAA9B,UACI,eAAC,iBAAD,CAAesB,GAAG,kBAAlB,SACI,eAACQ,GAAA,EAAYE,KAAb,sBAEJ,eAAC,iBAAD,CAAeV,GAAG,qBAAlB,SACI,eAACQ,GAAA,EAAYE,KAAb,yBAEJ,eAAC,iBAAD,CAAeV,GAAG,mBAAlB,SACI,eAACQ,GAAA,EAAYE,KAAb,wC,mBCtCrBI,GAdA,WACX,OACI,kCACI,eAACf,GAAA,EAAD,UACI,eAACgB,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,CAAK1C,UAAU,mBAAf,2C,UCLd2C,GAAS,SAAC,GAA4B,IAA1B7C,EAAyB,EAAzBA,MAAO8C,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC3B,OACI,uBAAK7C,UAAU,SAAf,UACI,gCACI,oBAAG8C,MAAO,CAACD,SACP7C,UACIF,GAAS,EACH,cACAA,GAAS,GACT,uBACA,kBAIlB,gCACI,oBAAGgD,MAAO,CAACD,SACP7C,UACIF,GAAS,EACH,cACAA,GAAS,IACT,uBACA,kBAIlB,gCACI,oBAAGgD,MAAO,CAACD,SACP7C,UACIF,GAAS,EACH,cACAA,GAAS,IACT,uBACA,kBAIlB,gCACI,oBAAGgD,MAAO,CAACD,SACP7C,UACIF,GAAS,EACH,cACAA,GAAS,IACT,uBACA,kBAIlB,gCACI,oBAAGgD,MAAO,CAACD,SACP7C,UACIF,GAAS,EACH,cACAA,GAAS,IACT,uBACA,kBAIlB,gCAAO8C,GAAQA,QAK3BD,GAAOI,aAAe,CAClBF,MAAO,WASIF,UC5CAK,GA3BC,SAAC,GAAiB,IAAfrH,EAAc,EAAdA,QACf,OACI,gBAACsH,GAAA,EAAD,CAAMjD,UAAU,mBAAhB,UACI,eAAC,QAAD,CAAM0B,GAAE,mBAAc/F,EAAQuH,KAA9B,SACI,eAACD,GAAA,EAAKE,IAAN,CAAUC,IAAKzH,EAAQ0H,MAAOnD,QAAQ,UAG1C,gBAAC+C,GAAA,EAAKK,KAAN,WACI,eAAC,QAAD,CAAM5B,GAAE,mBAAc/F,EAAQuH,KAA9B,SACI,eAACD,GAAA,EAAKM,MAAN,CAAYC,GAAG,MAAf,SACI,kCAAS7H,EAAQgE,WAIzB,eAACsD,GAAA,EAAKQ,KAAN,CAAWD,GAAG,MAAd,SACI,eAAC,GAAD,CACI1D,MAAOnE,EAAQ+H,OACfd,KAAI,UAAKjH,EAAQgI,WAAb,gBAIZ,gBAACV,GAAA,EAAKQ,KAAN,CAAWD,GAAG,KAAd,cAAqB7H,EAAQiI,gB,UCvBvCC,GAAU,SAAC,GAA2B,IAAzB3D,EAAwB,EAAxBA,QAAS4D,EAAe,EAAfA,SACxB,OACI,eAACC,GAAA,EAAD,CAAO7D,QAASA,EAAhB,SACK4D,KAKbD,GAAQd,aAAe,CACnB7C,QAAS,QAGE2D,U,UCKAG,GAjBA,WACX,OACI,eAACC,GAAA,EAAD,CACIC,UAAU,SACVC,KAAK,SACLrB,MAAO,CACHsB,MAAO,QACPC,OAAQ,QACRC,OAAQ,OACRC,QAAS,SAPjB,SAUG,uBAAMvE,UAAU,UAAhB,2B,UCCIwE,GAZE,SAAC,GAAoD,IAAlDjJ,EAAiD,EAAjDA,MAAiD,KAA1CC,KAA0C,EAApC+G,gBAAoC,aAAnBtD,eAAmB,MAAT,GAAS,EACjE,OAAO1D,EAAQ,GACX,eAACkJ,GAAA,EAAD,UACK,YAAIC,MAAMnJ,GAAOoJ,QAAQjI,KAAI,SAAAlB,GAAI,OAC9B,eAAC,iBAAD,CAA4BkG,GAAKa,EAAD,6BAAqG/G,EAAK,GAA/FyD,EAAO,kBAAcA,EAAd,iBAA8BzD,EAAK,GAAnC,gBAAkDA,EAAK,GAAzG,SACI,eAACiJ,GAAA,EAAWrC,KAAZ,CAAiBwC,OAAQpJ,EAAK,IAAMA,EAApC,SAA2CA,EAAK,KADhCA,EAAK,S,SCLnCqJ,GAAO,SAAC,GAAsC,IAApC1C,EAAmC,EAAnCA,MAAO2C,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAChC,OACI,gBAACC,GAAA,EAAD,WACI,iCAAQ7C,IACR,uBAAMxC,KAAK,cAAcsF,QAASH,IAClC,uBAAMnF,KAAK,UAAUsF,QAASF,QAK1CF,GAAK9B,aAAe,CAChBZ,MAAO,qBACP4C,SAAU,kDACVD,YAAa,uCAGFD,U,oBCMFK,GAAe,eAACjG,EAAD,uDAAW,GAAIkG,EAAf,uDAA4B,GAA5B,gDAAmC,WAAO9E,GAAP,gBAAAE,EAAA,sEAEvDF,EAAS,CAAEjF,KAAMjF,IAFsC,SAIpCyK,KAAMC,IAAN,gCAAmC5B,EAAnC,uBAAyDkG,IAJrB,OAIjDC,EAJiD,OAMvD/E,EAAS,CACLjF,KAAMhF,EACNkF,QAAS8J,EAAItE,OARsC,gDAWvDT,EAAS,CACLjF,KAAM/E,EACNiF,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAfuC,yDAAnC,uDAoBfqE,GAAqB,SAACjF,GAAD,gDAAQ,WAAOC,GAAP,gBAAAE,EAAA,sEAElCF,EAAS,CAAEjF,KAAM9E,IAFiB,SAIfsK,KAAMC,IAAN,wBAA2BT,IAJZ,OAI5BgF,EAJ4B,OAMlC/E,EAAS,CACLjF,KAAM7E,EACN+E,QAAS8J,EAAItE,OARiB,gDAWlCT,EAAS,CACLjF,KAAM5E,EACN8E,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAfkB,yDAAR,uDCXnBsE,GA1BS,WACpB,IAAMjF,EAAWc,cAEXjF,EAAkBkF,aAAY,SAAAnG,GAAK,OAAIA,EAAMiB,mBAC3Cb,EAA6Ba,EAA7Bb,QAASI,EAAoBS,EAApBT,MAAOP,EAAagB,EAAbhB,SAMxB,OAJAqK,qBAAU,WACNlF,EDyLuB,yCAAM,WAAOA,GAAP,gBAAAE,EAAA,sEAE7BF,EAAS,CAAEjF,KAAM5D,IAFY,SAIVoJ,KAAMC,IAAN,qBAJU,OAIvBuE,EAJuB,OAM7B/E,EAAS,CACLjF,KAAM3D,EACN6D,QAAS8J,EAAItE,OARY,gDAW7BT,EAAS,CACLjF,KAAM1D,EACN4D,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAfa,yDAAN,yDCxLxB,CAACX,IAEGhF,EAAU,eAAC,GAAD,IAAaI,EAAQ,eAAC,GAAD,CAASyE,QAAQ,SAAjB,SAA2BzE,IAC7D,eAAC+J,GAAA,EAAD,CAAUC,MAAM,QAAQzF,UAAU,UAAlC,SACK9E,EAASwB,KAAI,SAAAf,GAAO,OACjB,eAAC6J,GAAA,EAASpD,KAAV,UACI,gBAAC,QAAD,CAAMV,GAAE,mBAAc/F,EAAQuH,KAA9B,UACI,eAACwC,GAAA,EAAD,CAAOtC,IAAKzH,EAAQ0H,MAAOsC,IAAKhK,EAAQgE,KAAMiG,OAAK,IACnD,eAACJ,GAAA,EAASK,QAAV,CAAkB7F,UAAU,mBAA5B,SACI,gCAAKrE,EAAQgE,KAAb,MAAsBhE,EAAQiI,MAA9B,aAJQjI,EAAQuH,WC8B7B4C,GAvCI,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACZ9G,EAAU8G,EAAMC,OAAO/G,QACvBkG,EAAaY,EAAMC,OAAOb,YAAc,EAExCc,EAAW9E,cAEXnG,EAAcoG,aAAY,SAAAnG,GAAK,OAAIA,EAAMD,eACvCK,EAA0CL,EAA1CK,QAASI,EAAiCT,EAAjCS,MAAOP,EAA0BF,EAA1BE,SAAUM,EAAgBR,EAAhBQ,KAAMD,EAAUP,EAAVO,MAMxC,OAJAgK,qBAAU,WACNU,EAASf,GAAajG,EAASkG,MAChC,CAACc,EAAUhH,EAASkG,IAGnB,iCACA,eAAC,GAAD,IACElG,EAAgC,eAAC,QAAD,CAAMyC,GAAG,IAAI1B,UAAU,gBAAvB,qBAAtB,eAAC,GAAD,IACR,kDACC3E,EACG,eAAC,GAAD,IACAI,EACA,eAAC,GAAD,CAASyE,QAAQ,SAAjB,SAA2BzE,IAE3B,iCACA,eAACgH,GAAA,EAAD,UACKvH,EAASwB,KAAI,SAACf,GAAD,OACV,eAAC+G,GAAA,EAAD,CAAuBwD,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAjD,SACI,eAAC,GAAD,CAAS1K,QAASA,KADZA,EAAQuH,UAK1B,eAAC,GAAD,CAAU3H,MAAOA,EAAOC,KAAMA,EAAMyD,QAASA,GAAoB,Y,mBC6JlEqH,GA7LO,SAAC,GAAwB,IAAtBvH,EAAqB,EAArBA,QAASgH,EAAY,EAAZA,MAC9B,EAAsB/G,mBAAS,GAA/B,oBAAOuH,EAAP,KAAYC,EAAZ,KACA,EAA4BxH,mBAAS,GAArC,oBAAO0E,EAAP,KAAe+C,EAAf,KACA,EAA8BzH,mBAAS,IAAvC,oBAAO0H,EAAP,KAAgBC,EAAhB,KAEMtG,EAAWc,cAEXzF,EAAiB0F,aAAY,SAAAnG,GAAK,OAAIA,EAAMS,kBAC1CL,EAA4BK,EAA5BL,QAASI,EAAmBC,EAAnBD,MAAOE,EAAYD,EAAZC,QAElBM,EAAsBmF,aAAY,SAAAnG,GAAK,OAAIA,EAAMgB,uBACtC2K,EAAoD3K,EAA7DH,QAAsC+K,EAAuB5K,EAA9BR,MAG/BsB,EADUqE,aAAY,SAAAnG,GAAK,OAAIA,EAAM6B,aACrCC,SAERwI,qBAAU,WACHqB,IACCE,MAAM,qBACNL,EAAU,GACVE,EAAW,IACXtG,EAAS,CAAEjF,KAAM7D,KAErB8I,EAASgF,GAAmBU,EAAMC,OAAO5F,OAC1C,CAACC,EAAU0F,EAAOa,IAerB,OACI,iCACI,eAAC,QAAD,CAAM5G,UAAU,qBAAqB0B,GAAG,IAAxC,qBAGCrG,EAAU,eAAC,GAAD,IAAaI,EAAQ,eAAC,GAAD,CAASyE,QAAQ,SAAjB,SAA2BzE,IACvD,iCACI,eAAC,GAAD,CAAM0G,MAAOxG,EAAQgE,OACrB,gBAAC8C,GAAA,EAAD,WACA,eAACC,GAAA,EAAD,CAAKyD,GAAI,EAAT,SACI,eAACT,GAAA,EAAD,CAAOtC,IAAKzH,EAAQ0H,MAAOsC,IAAKhK,EAAQgE,KAAMiG,OAAK,MAEvD,eAAClD,GAAA,EAAD,CAAKyD,GAAI,EAAT,SACI,gBAACY,GAAA,EAAD,CAAW7G,QAAQ,QAAnB,UACI,eAAC6G,GAAA,EAAU3E,KAAX,UACI,8BAAKzG,EAAQgE,SAEjB,eAACoH,GAAA,EAAU3E,KAAX,UACI,eAAC,GAAD,CAAQtC,MAAOnE,EAAQ+H,OAAQd,KAAI,UAAKjH,EAAQgI,WAAb,gBAEvC,gBAACoD,GAAA,EAAU3E,KAAX,sBACazG,EAAQiI,SAErB,gBAACmD,GAAA,EAAU3E,KAAX,4BACmBzG,EAAQmJ,oBAInC,eAACpC,GAAA,EAAD,CAAKyD,GAAI,EAAT,SACI,eAAClD,GAAA,EAAD,UACI,gBAAC8D,GAAA,EAAD,CAAW7G,QAAQ,QAAnB,UACI,eAAC6G,GAAA,EAAU3E,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,qBAGA,eAACA,GAAA,EAAD,UACI,wCAAU/G,EAAQiI,gBAK9B,eAACmD,GAAA,EAAU3E,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,sBAGA,eAACA,GAAA,EAAD,UACK/G,EAAQqL,aAAe,EAAI,WAAa,sBAKpDrL,EAAQqL,aAAe,GACpB,eAACC,GAAA,EAAD,UACI,gBAACxE,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,kBACA,eAACA,GAAA,EAAD,UACI,eAACvD,GAAA,EAAKO,QAAN,CACI8D,GAAG,SACH1D,MAAOyG,EACP3G,SAAU,SAACP,GAAD,OAAOmH,EAAOnH,EAAEQ,OAAOC,QAHrC,SAKK,YAAI4E,MAAM/I,EAAQqL,cAAcrC,QAAQjI,KAAI,SAAAD,GAAC,OAC1C,yBAAoBqD,MAAOrD,EAAI,EAA/B,SACKA,EAAI,GADIA,EAAI,eAUzC,eAACsK,GAAA,EAAU3E,KAAX,UACI,eAACnC,GAAA,EAAD,CACIoC,QAzFX,WACrBtD,EAAQS,KAAR,gBAAsBuG,EAAMC,OAAO5F,GAAnC,gBAA6CmG,KAyFbvG,UAAU,YACV5E,KAAK,SACL8L,SAAmC,IAAzBvL,EAAQqL,aAJtB,qCAapB,eAACvE,GAAA,EAAD,UACI,gBAACC,GAAA,EAAD,CAAKyD,GAAI,EAAT,UACI,0CAC4B,IAA3BxK,EAAQC,QAAQuL,QAAgB,eAAC,GAAD,yBACjC,gBAACJ,GAAA,EAAD,CAAW7G,QAAQ,QAAnB,UACKvE,EAAQC,QAAQc,KAAI,SAAA0K,GAAM,OACvB,gBAACL,GAAA,EAAU3E,KAAX,WACI,kCAASgF,EAAOzH,OAChB,eAAC,GAAD,CAAQG,MAAOsH,EAAO1D,SACtB,6BAAI0D,EAAOC,UAAUC,UAAU,EAAG,MAClC,6BAAIF,EAAOV,YAJMU,EAAOlE,QAOhC,gBAAC6D,GAAA,EAAU3E,KAAX,WACI,0DACCyE,GAAsB,eAAC,GAAD,CAAS3G,QAAQ,SAAjB,SAA2B2G,IACjD9J,EACG,gBAACoC,GAAA,EAAD,CAAMC,SAlHhB,SAACC,GH6HQ,IAACkI,EAAWH,EG5HvC/H,EAAEC,iBAEFe,GH0H4BkH,EG1HCxB,EAAMC,OAAO5F,GH0HHgH,EG1HO,CAC1C1D,SACAgD,WHwHuB,yCAAuB,WAAOrG,EAAUC,GAAjB,oBAAAC,EAAA,sEAElDF,EAAS,CACLjF,KAAMhE,IAHwC,EAMdkJ,IAAfvD,EAN6B,EAM1CD,UAAaC,SAEfyD,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY3D,EAAS4D,SAXQ,SAe5CC,KAAM4G,KAAN,wBACeD,EADf,YAEFH,EACA5G,GAlB8C,OAqBlDH,EAAS,CACLjF,KAAM/D,IAtBwC,gDAyBlDgJ,EAAS,CACLjF,KAAM9D,EACNgE,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA7BkC,yDAAvB,2DGXC,UACI,gBAAC7B,GAAA,EAAKsI,MAAN,CAAYC,UAAU,SAAtB,UACI,eAACvI,GAAA,EAAKwI,MAAN,qBACA,gBAACxI,GAAA,EAAKO,QAAN,CACI8D,GAAG,SACH1D,MAAO4D,EACP9D,SAAW,SAAAP,GAAC,OAAIoH,EAAUpH,EAAEQ,OAAOC,QAHvC,UAKI,yBAAQA,MAAM,GAAd,uBACA,yBAAQA,MAAM,IAAd,sBACA,yBAAQA,MAAM,IAAd,sBACA,yBAAQA,MAAM,IAAd,sBACA,yBAAQA,MAAM,IAAd,2BACA,yBAAQA,MAAM,IAAd,gCAGR,gBAACX,GAAA,EAAKsI,MAAN,CAAYC,UAAU,UAAtB,UACI,eAACvI,GAAA,EAAKwI,MAAN,sBACA,eAACxI,GAAA,EAAKO,QAAN,CACI8D,GAAG,WACHoE,IAAI,IACJ9H,MAAO4G,EACP9G,SAAU,SAACP,GAAD,OAAOsH,EAAWtH,EAAEQ,OAAOC,aAG7C,eAACG,GAAA,EAAD,CACI7E,KAAK,SACL8E,QAAQ,UAFZ,uBAQJ,gBAAC,GAAD,qBAAgB,eAAC,QAAD,CAAMwB,GAAG,SAAT,qBAAhB,0CCzLvBmG,GAAY,SAACzH,EAAImG,GAAL,gDAAa,WAAOlG,EAAUC,GAAjB,gBAAAC,EAAA,sEAChBK,KAAMC,IAAN,wBAA2BT,IADX,OAC5BgF,EAD4B,OAGlC/E,EAAS,CACLjF,KAAMzD,EACN2D,QAAS,CACLK,QAASyJ,EAAItE,KAAKoC,IAClBvD,KAAMyF,EAAItE,KAAKnB,KACf0D,MAAO+B,EAAItE,KAAKuC,MAChBO,MAAOwB,EAAItE,KAAK8C,MAChBoD,aAAc5B,EAAItE,KAAKkG,aACvBT,SAIRrI,aAAa4J,QAAQ,YAAa1J,KAAK2J,UAAUzH,IAAWnE,KAAKC,YAf/B,2CAAb,yDC4GV4L,GAxGI,SAAC,GAAkC,IAAhCjC,EAA+B,EAA/BA,MAAOkC,EAAwB,EAAxBA,SAAUlJ,EAAc,EAAdA,QAC7BwI,EAAYxB,EAAMC,OAAO5F,GAEzBmG,EAAM0B,EAASC,OAASC,OAAOF,EAASC,OAAOE,MAAM,KAAK,IAAM,EAEhE/H,EAAWc,cAGT/E,EADKgF,aAAY,SAACnG,GAAD,OAAWA,EAAMkB,QAClCC,UAERmJ,qBAAU,WACHgC,GACClH,EAASwH,GAAUN,EAAWhB,MAEnC,CAAClG,EAAUkH,EAAWhB,IAEzB,IAAM8B,EAAwB,SAACjI,GAC3BC,EDHsB,SAACD,GAAD,OAAQ,SAACC,EAAUC,GAC7CD,EAAS,CACLjF,KAAMxD,EACN0D,QAAS8E,IAGblC,aAAa4J,QAAQ,YAAa1J,KAAK2J,UAAUzH,IAAWnE,KAAKC,aCHpDkM,CAAelI,KAO5B,OACI,gBAACqC,GAAA,EAAD,WACI,gBAACC,GAAA,EAAD,CAAKyD,GAAI,EAAT,UACI,gDACsB,IAArB/J,EAAU+K,OACP,gBAAC,GAAD,iCAA4B,eAAC,QAAD,CAAMzF,GAAG,IAAT,wBAE5B,eAACqF,GAAA,EAAD,CAAW7G,QAAQ,QAAnB,SACK9D,EAAUM,KAAI,SAAAJ,GAAI,OACf,eAACyK,GAAA,EAAU3E,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKyD,GAAI,EAAT,SACI,eAACT,GAAA,EAAD,CAAOtC,IAAK9G,EAAK+G,MAAOsC,IAAKrJ,EAAKqD,KAAMiG,OAAK,EAAC2C,SAAO,MAEzD,eAAC7F,GAAA,EAAD,CAAKyD,GAAI,EAAT,SACI,eAAC,QAAD,CAAMzE,GAAE,mBAAcpF,EAAKX,SAA3B,SAAuCW,EAAKqD,SAEhD,eAAC+C,GAAA,EAAD,CAAKyD,GAAI,EAAT,SAAa7J,EAAKsH,QAClB,eAAClB,GAAA,EAAD,CAAKyD,GAAI,EAAT,SACI,eAAChH,GAAA,EAAKO,QAAN,CACI8D,GAAG,SACH1D,MAAOxD,EAAKiK,IACZ3G,SAAU,SAACP,GAAD,OACNgB,EACIwH,GAAUvL,EAAKX,QAASwM,OAAO9I,EAAEQ,OAAOC,UALpD,SASK,YAAI4E,MAAMpI,EAAK0K,cAAcrC,QAAQjI,KAAI,SAAAD,GAAC,OACvC,yBAAoBqD,MAAOrD,EAAI,EAA/B,SACKA,EAAI,GADIA,EAAI,UAM7B,eAACiG,GAAA,EAAD,CAAKyD,GAAI,EAAT,SACI,eAAClG,GAAA,EAAD,CACI7E,KAAK,SACL8E,QAAQ,QACRmC,QAAS,kBACLgG,EAAsB/L,EAAKX,UAJnC,SAMI,oBAAGqE,UAAU,yBAjCR1D,EAAKX,iBA0C1C,eAAC+G,GAAA,EAAD,CAAKyD,GAAI,EAAT,SACI,eAAClD,GAAA,EAAD,UACI,gBAAC8D,GAAA,EAAD,CAAW7G,QAAQ,QAAnB,UACI,gBAAC6G,GAAA,EAAU3E,KAAX,WACI,6CACehG,EAAUoM,QAAO,SAACC,EAAKnM,GAAN,OAAemM,EAAMnM,EAAKiK,MAAK,GAD/D,aADJ,IAKSnK,EACIoM,QAAO,SAACC,EAAKnM,GAAN,OAAemM,EAAMnM,EAAKiK,IAAMjK,EAAKsH,QAAO,GACnD8E,QAAQ,MAErB,eAAC3B,GAAA,EAAU3E,KAAX,UACI,eAACnC,GAAA,EAAD,CACI7E,KAAK,SACL4E,UAAU,YACVkH,SAA+B,IAArB9K,EAAU+K,OACpB9E,QAxEJ,WACpBtD,EAAQS,KAAK,6BAmEO,8CChFbmJ,GAZO,SAAC,GAAkB,IAAhB7E,EAAe,EAAfA,SACrB,OACI,eAACrC,GAAA,EAAD,UACI,eAACgB,GAAA,EAAD,CAAKzC,UAAU,4BAAf,SACI,eAAC0C,GAAA,EAAD,CAAKkG,GAAI,GAAIzC,GAAI,EAAjB,SACKrC,SCiEN+E,GAhEK,SAAC,GAA2B,IAAzBZ,EAAwB,EAAxBA,SAAUlJ,EAAc,EAAdA,QAC7B,EAA0BC,mBAAS,IAAnC,oBAAO8J,EAAP,KAAcC,EAAd,KACA,EAAgC/J,mBAAS,IAAzC,oBAAOgK,EAAP,KAAiBC,EAAjB,KAEM5I,EAAWc,cAEXrE,EAAYsE,aAAY,SAAAnG,GAAK,OAAIA,EAAM6B,aACrCzB,EAA6ByB,EAA7BzB,QAASI,EAAoBqB,EAApBrB,MAAOsB,EAAaD,EAAbC,SAElBmM,EAAWjB,EAASC,OAASD,EAASC,OAAOE,MAAM,KAAK,GAAK,IAEnE7C,qBAAU,WACHxI,GACCgC,EAAQS,KAAK0J,KAElB,CAACnK,EAAShC,EAAUmM,IAOvB,OACI,gBAAC,GAAD,WACI,0CACCzN,GAAS,eAAC,GAAD,CAASyE,QAAQ,SAAjB,SAA2BzE,IACpCJ,GAAW,eAAC,GAAD,IACZ,gBAAC8D,GAAA,EAAD,CAAMC,SAVQ,SAACC,GACnBA,EAAEC,iBACFe,EhBAa,SAACyI,EAAOE,GAAR,gDAAqB,WAAO3I,GAAP,oBAAAE,EAAA,sEAElCF,EAAS,CACLjF,KAAMrD,IAGJyI,EAAS,CACXC,QAAS,CACL,eAAgB,qBARU,SAYXG,KAAM4G,KACzB,mBACA,CAAEsB,QAAOE,YACTxI,GAf8B,gBAY1BM,EAZ0B,EAY1BA,KAMRT,EAAS,CACLjF,KAAMpD,EACNsD,QAASwF,IAGb5C,aAAa4J,QAAQ,WAAY1J,KAAK2J,UAAUjH,IAvBd,kDAyBlCT,EAAS,CACLjF,KAAMnD,EACNqD,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA7BkB,0DAArB,sDgBAJmI,CAAML,EAAOE,KAQlB,UACI,gBAAC7J,GAAA,EAAKsI,MAAN,CAAYC,UAAU,QAAtB,UACI,eAACvI,GAAA,EAAKwI,MAAN,4BACA,eAACxI,GAAA,EAAKO,QAAN,CACItE,KAAK,QACL2E,YAAY,cACZD,MAAOgJ,EACPlJ,SAAU,SAACP,GAAD,OAAO0J,EAAS1J,EAAEQ,OAAOC,aAG3C,gBAACX,GAAA,EAAKsI,MAAN,CAAYC,UAAU,WAAtB,UACI,eAACvI,GAAA,EAAKwI,MAAN,uBACA,eAACxI,GAAA,EAAKO,QAAN,CACItE,KAAK,WACL2E,YAAY,iBACZD,MAAOkJ,EACPpJ,SAAU,SAACP,GAAD,OAAO4J,EAAY5J,EAAEQ,OAAOC,aAI9C,eAACG,GAAA,EAAD,CAAQ7E,KAAK,SAAS8E,QAAQ,UAA9B,wBAKJ,eAACuC,GAAA,EAAD,CAAKzC,UAAU,OAAf,SACI,gBAAC0C,GAAA,EAAD,2BAEI,eAAC,QAAD,CAAMhB,GAAIwH,EAAQ,6BAAyBA,GAAa,YAAxD,+BCwCLE,GA/FQ,SAAC,GAA2B,IAAzBnB,EAAwB,EAAxBA,SAAUlJ,EAAc,EAAdA,QAChC,EAAwBC,mBAAS,IAAjC,oBAAOW,EAAP,KAAa0J,EAAb,KACA,EAA0BrK,mBAAS,IAAnC,oBAAO8J,EAAP,KAAcC,EAAd,KACA,EAAgC/J,mBAAS,IAAzC,oBAAOgK,EAAP,KAAiBC,EAAjB,KACA,EAA8CjK,mBAAS,IAAvD,oBAAOsK,EAAP,KAAwBC,EAAxB,KACA,EAA8BvK,mBAAS,MAAvC,oBAAOgC,EAAP,KAAgBwI,EAAhB,KAEMnJ,EAAWc,cAEXnE,EAAeoE,aAAY,SAAAnG,GAAK,OAAIA,EAAM+B,gBACxC3B,EAA6B2B,EAA7B3B,QAASI,EAAoBuB,EAApBvB,MAAOsB,EAAaC,EAAbD,SAElBmM,EAAWjB,EAASC,OAASD,EAASC,OAAOE,MAAM,KAAK,GAAK,IAEnE7C,qBAAU,WACHxI,GACCgC,EAAQS,KAAK0J,KAElB,CAACnK,EAAShC,EAAUmM,IAavB,OACI,gBAAC,GAAD,WACI,0CACClI,GAAW,eAAC,GAAD,CAASd,QAAQ,SAAjB,SAA2Bc,IACtCvF,GAAS,eAAC,GAAD,CAASyE,QAAQ,SAAjB,SAA2BzE,IACpCJ,GAAW,eAAC,GAAD,IACZ,gBAAC8D,GAAA,EAAD,CAAMC,SAjBQ,SAACC,GACnBA,EAAEC,iBAEC0J,IAAaM,EACZE,EAAW,0BAEXnJ,EjBmCY,SAACV,EAAMmJ,EAAOE,GAAd,gDAA2B,WAAO3I,GAAP,oBAAAE,EAAA,sEAE3CF,EAAS,CACLjF,KAAMjD,IAGJqI,EAAS,CACXC,QAAS,CACL,eAAgB,qBARmB,SAYpBG,KAAM4G,KACzB,aACA,CAAE7H,OAAMmJ,QAAOE,YACfxI,GAfuC,gBAYnCM,EAZmC,EAYnCA,KAMRT,EAAS,CACLjF,KAAMhD,EACNkD,QAASwF,IAGbT,EAAS,CACLjF,KAAMpD,EACNsD,QAASwF,IAGb5C,aAAa4J,QAAQ,WAAY1J,KAAK2J,UAAUjH,IA5BL,kDA8B3CT,EAAS,CACLjF,KAAM/C,EACNiD,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAlC2B,0DAA3B,sDiBnCHyI,CAAS9J,EAAMmJ,EAAOE,KAW/B,UACI,gBAAC7J,GAAA,EAAKsI,MAAN,CAAYC,UAAU,OAAtB,UACI,eAACvI,GAAA,EAAKwI,MAAN,mBACA,eAACxI,GAAA,EAAKO,QAAN,CACItE,KAAK,OACL2E,YAAY,aACZD,MAAOH,EACPC,SAAU,SAACP,GAAD,OAAOgK,EAAQhK,EAAEQ,OAAOC,aAI1C,gBAACX,GAAA,EAAKsI,MAAN,CAAYC,UAAU,QAAtB,UACI,eAACvI,GAAA,EAAKwI,MAAN,4BACA,eAACxI,GAAA,EAAKO,QAAN,CACItE,KAAK,QACL2E,YAAY,cACZD,MAAOgJ,EACPlJ,SAAU,SAACP,GAAD,OAAO0J,EAAS1J,EAAEQ,OAAOC,aAI3C,gBAACX,GAAA,EAAKsI,MAAN,CAAYC,UAAU,WAAtB,UACI,eAACvI,GAAA,EAAKwI,MAAN,+BACA,eAACxI,GAAA,EAAKO,QAAN,CACItE,KAAK,WACL2E,YAAY,iBACZD,MAAOkJ,EACPpJ,SAAU,SAACP,GAAD,OAAO4J,EAAY5J,EAAEQ,OAAOC,aAI9C,gBAACX,GAAA,EAAKsI,MAAN,CAAYC,UAAU,kBAAtB,UACI,eAACvI,GAAA,EAAKwI,MAAN,+BACA,eAACxI,GAAA,EAAKO,QAAN,CACItE,KAAK,WACL2E,YAAY,mBACZD,MAAOwJ,EACP1J,SAAU,SAACP,GAAD,OAAOkK,EAAmBlK,EAAEQ,OAAOC,aAIrD,eAACG,GAAA,EAAD,CAAQ7E,KAAK,SAAS8E,QAAQ,UAA9B,yBAKJ,eAACuC,GAAA,EAAD,CAAKzC,UAAU,OAAf,SACI,gBAAC0C,GAAA,EAAD,8BAEI,eAAC,QAAD,CAAMhB,GAAIwH,EAAQ,0BAAsBA,GAAa,SAArD,4B,UC4DLQ,GAjJO,SAAC,GAAkB,IAAf3K,EAAc,EAAdA,QACtB,EAAwBC,mBAAS,IAAjC,oBAAOW,EAAP,KAAa0J,EAAb,KACA,EAA0BrK,mBAAS,IAAnC,oBAAO8J,EAAP,KAAcC,EAAd,KACA,EAAgC/J,mBAAS,IAAzC,oBAAOgK,EAAP,KAAiBC,EAAjB,KACA,EAA8CjK,mBAAS,IAAvD,oBAAOsK,EAAP,KAAwBC,EAAxB,KACA,EAA8BvK,mBAAS,MAAvC,oBAAOgC,EAAP,KAAgBwI,EAAhB,KAEMnJ,EAAWc,cAEXlE,EAAcmE,aAAY,SAAAnG,GAAK,OAAIA,EAAMgC,eACvC5B,EAAyB4B,EAAzB5B,QAASI,EAAgBwB,EAAhBxB,MAAOyB,EAASD,EAATC,KAGhBH,EADUqE,aAAY,SAAAnG,GAAK,OAAIA,EAAM6B,aACrCC,SAGAjB,EADkBsF,aAAY,SAAAnG,GAAK,OAAIA,EAAMkC,qBAC7CrB,QAEFgC,EAAcsD,aAAY,SAAAnG,GAAK,OAAIA,EAAM6C,eAC9B6L,EAA8C7L,EAAvDzC,QAA+BuO,EAAwB9L,EAA/BrC,MAAoBsC,EAAWD,EAAXC,OAEpDwH,qBAAU,WACFxI,EAGIG,GAASA,EAAKyC,OAAQ7D,GAKtBuN,EAAQnM,EAAKyC,MACboJ,EAAS7L,EAAK4L,SALdzI,EAAS,CAAEjF,KAAMvC,KACjBwH,EAASF,GAAe,YACxBE,ECuFY,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAE1BF,EAAS,CACLjF,KAAMjB,KAHgB,EAMUmG,IAAfvD,EANK,EAMlBD,UAAaC,SAEfyD,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAY3D,EAAS4D,SAVhB,SAcHC,KAAMC,IAAN,uBAEnBL,GAhBsB,gBAclBM,EAdkB,EAclBA,KAKRT,EAAS,CACLjF,KAAMhB,GACNkB,QAASwF,IArBa,kDAwB1BT,EAAS,CACLjF,KAAMf,GACNiB,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA5BU,0DAAN,0DD5FhBjC,EAAQS,KAAK,YAWlB,CAACa,EAAUtB,EAAS7B,EAAMH,EAAUjB,IAavC,OACI,gBAAC2G,GAAA,EAAD,WACI,gBAACC,GAAA,EAAD,CAAKyD,GAAI,EAAT,UACI,+CACCnF,GAAW,eAAC,GAAD,CAASd,QAAQ,SAAjB,SAA2Bc,IACtCvF,GAAS,eAAC,GAAD,CAASyE,QAAQ,SAAjB,SAA2BzE,IACpCK,GAAW,eAAC,GAAD,CAASoE,QAAQ,UAAjB,6BACX7E,GAAW,eAAC,GAAD,IACZ,gBAAC8D,GAAA,EAAD,CAAMC,SAnBI,SAACC,GACnBA,EAAEC,iBAEC0J,IAAaM,EACZE,EAAW,0BAGXnJ,ElB0FqB,SAACnD,GAAD,gDAAU,WAAOmD,EAAUC,GAAjB,wBAAAC,EAAA,sEAEnCF,EAAS,CACLjF,KAAM1C,IAHyB,EAMC4H,IAAfvD,EANc,EAM3BD,UAAaC,SAEfyD,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY3D,EAAS4D,SAXP,SAeZC,KAAMiJ,IAAN,qBAEnB3M,EACAsD,GAlB+B,gBAe3BM,EAf2B,EAe3BA,KAMRT,EAAS,CACLjF,KAAMzC,EACN2C,QAASwF,IAGbT,EAAS,CACLjF,KAAMpD,EACNsD,QAASwF,IAGb5C,aAAa4J,QAAQ,WAAY1J,KAAK2J,UAAUjH,IA/Bb,kDAiCnCT,EAAS,CACLjF,KAAMxC,EACN0C,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UArCmB,0DAAV,wDkB1FZ8I,CAAkB,CAAE1J,GAAIlD,EAAKgG,IAAKvD,OAAMmJ,QAAOE,eAYpD,UACI,gBAAC7J,GAAA,EAAKsI,MAAN,CAAYC,UAAU,OAAtB,UACI,eAACvI,GAAA,EAAKwI,MAAN,mBACA,eAACxI,GAAA,EAAKO,QAAN,CACItE,KAAK,OACL2E,YAAY,aACZD,MAAOH,EACPC,SAAU,SAACP,GAAD,OAAOgK,EAAQhK,EAAEQ,OAAOC,aAI1C,gBAACX,GAAA,EAAKsI,MAAN,CAAYC,UAAU,QAAtB,UACI,eAACvI,GAAA,EAAKwI,MAAN,4BACA,eAACxI,GAAA,EAAKO,QAAN,CACItE,KAAK,QACL2E,YAAY,cACZD,MAAOgJ,EACPlJ,SAAU,SAACP,GAAD,OAAO0J,EAAS1J,EAAEQ,OAAOC,aAI3C,gBAACX,GAAA,EAAKsI,MAAN,CAAYC,UAAU,WAAtB,UACI,eAACvI,GAAA,EAAKwI,MAAN,+BACA,eAACxI,GAAA,EAAKO,QAAN,CACItE,KAAK,WACL2E,YAAY,iBACZD,MAAOkJ,EACPpJ,SAAU,SAACP,GAAD,OAAO4J,EAAY5J,EAAEQ,OAAOC,aAI9C,gBAACX,GAAA,EAAKsI,MAAN,CAAYC,UAAU,kBAAtB,UACI,eAACvI,GAAA,EAAKwI,MAAN,+BACA,eAACxI,GAAA,EAAKO,QAAN,CACItE,KAAK,WACL2E,YAAY,mBACZD,MAAOwJ,EACP1J,SAAU,SAACP,GAAD,OAAOkK,EAAmBlK,EAAEQ,OAAOC,aAIrD,eAACG,GAAA,EAAD,CAAQ7E,KAAK,SAAS8E,QAAQ,UAA9B,0BAKR,gBAACwC,GAAA,EAAD,CAAKyD,GAAI,EAAT,UACI,4CACCwD,EAAgB,eAAC,GAAD,IAAaC,EAAc,eAAC,GAAD,CAAS1J,QAAQ,SAAjB,SAA2B0J,IACnE,gBAACG,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAACnK,UAAU,WAAnD,UACI,iCACI,gCACI,qCACA,uCACA,wCACA,uCACA,4CACA,6BAGR,iCACKjC,EAAOrB,KAAI,SAAAe,GAAK,OACb,gCACI,8BAAKA,EAAM4J,UAAUC,UAAU,EAAG,MAClC,8BAAK7J,EAAM2M,aACX,8BACK3M,EAAM4M,OAAS5M,EAAM6M,OAAOhD,UAAU,EAAG,IACtC,oBAAGtH,UAAU,eAAe8C,MAAO,CAACD,MAAO,WAGnD,8BACKpF,EAAM8M,YAAc9M,EAAM+M,YAAYlD,UAAU,EAAG,IAChD,oBAAGtH,UAAU,eAAe8C,MAAO,CAACD,MAAO,WAGnD,8BACI,eAAC,iBAAD,CAAenB,GAAE,iBAAYjE,EAAMyF,KAAnC,SACI,eAACjD,GAAA,EAAD,CAAQD,UAAU,SAASE,QAAQ,QAAnC,2BAfHzC,EAAMyF,oBEhFhCuH,GA3CO,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC1C,OACI,gBAAC7I,GAAA,EAAD,CAAKhC,UAAU,8BAAf,UACI,eAACgC,GAAA,EAAII,KAAL,UACKsI,EACG,eAAC,iBAAD,CAAehJ,GAAG,SAAlB,SACI,eAACM,GAAA,EAAIC,KAAL,wBAGJ,eAACD,GAAA,EAAIC,KAAL,CAAUiF,UAAQ,EAAlB,uBAGR,eAAClF,GAAA,EAAII,KAAL,UACKuI,EACG,eAAC,iBAAD,CAAejJ,GAAG,YAAlB,SACI,eAACM,GAAA,EAAIC,KAAL,yBAGJ,eAACD,GAAA,EAAIC,KAAL,CAAUiF,UAAQ,EAAlB,wBAGR,eAAClF,GAAA,EAAII,KAAL,UACKwI,EACG,eAAC,iBAAD,CAAelJ,GAAG,WAAlB,SACI,eAACM,GAAA,EAAIC,KAAL,wBAGJ,eAACD,GAAA,EAAIC,KAAL,CAAUiF,UAAQ,EAAlB,uBAGR,eAAClF,GAAA,EAAII,KAAL,UACKyI,EACG,eAAC,iBAAD,CAAenJ,GAAG,cAAlB,SACI,eAACM,GAAA,EAAIC,KAAL,4BAGJ,eAACD,GAAA,EAAIC,KAAL,CAAUiF,UAAQ,EAAlB,+BC2CL4D,GA5EQ,SAAC,GAAiB,IAAf/L,EAAc,EAAdA,QAEdnC,EADKwE,aAAY,SAAAnG,GAAK,OAAIA,EAAMkB,QAChCS,gBAER,EAA8BoC,mBAASpC,EAAgBmO,SAAvD,oBAAOA,EAAP,KAAgBC,EAAhB,KACA,EAAwBhM,mBAASpC,EAAgBqO,MAAjD,oBAAOA,EAAP,KAAaC,EAAb,KACA,EAAoClM,mBAASpC,EAAgBuO,YAA7D,oBAAOA,EAAP,KAAmBC,EAAnB,KACA,EAA8BpM,mBAASpC,EAAgByO,SAAvD,oBAAOA,EAAP,KAAgBC,EAAhB,KAEMjL,EAAWc,cAUjB,OACI,gBAAC,GAAD,WACI,eAAC,GAAD,CAAeuJ,OAAK,EAACC,OAAK,IAC1B,2CACA,gBAACxL,GAAA,EAAD,CAAMC,SAZQ,SAACC,GRYQ,IAACyB,EQX5BzB,EAAEC,iBAEFe,GRS4BS,EQTC,CAAEiK,UAASE,OAAME,aAAYE,WRSrB,SAAChL,GAC1CA,EAAS,CACLjF,KAAMvD,EACNyD,QAASwF,IAGb5C,aAAa4J,QAAQ,kBAAmB1J,KAAK2J,UAAUjH,OQbnD/B,EAAQS,KAAK,aAOT,UACI,gBAACL,GAAA,EAAKsI,MAAN,CAAYC,UAAU,OAAtB,UACI,eAACvI,GAAA,EAAKwI,MAAN,sBACA,eAACxI,GAAA,EAAKO,QAAN,CACItE,KAAK,OACL2E,YAAY,gBACZD,MAAOiL,EACPQ,UAAQ,EACR3L,SAAU,SAACP,GAAD,OAAO2L,EAAW3L,EAAEQ,OAAOC,aAI7C,gBAACX,GAAA,EAAKsI,MAAN,CAAYC,UAAU,OAAtB,UACI,eAACvI,GAAA,EAAKwI,MAAN,mBACA,eAACxI,GAAA,EAAKO,QAAN,CACItE,KAAK,OACL2E,YAAY,aACZD,MAAOmL,EACPM,UAAQ,EACR3L,SAAU,SAACP,GAAD,OAAO6L,EAAQ7L,EAAEQ,OAAOC,aAI1C,gBAACX,GAAA,EAAKsI,MAAN,CAAYC,UAAU,OAAtB,UACI,eAACvI,GAAA,EAAKwI,MAAN,0BACA,eAACxI,GAAA,EAAKO,QAAN,CACItE,KAAK,OACL2E,YAAY,oBACZD,MAAOqL,EACPI,UAAQ,EACR3L,SAAU,SAACP,GAAD,OAAO+L,EAAc/L,EAAEQ,OAAOC,aAIhD,gBAACX,GAAA,EAAKsI,MAAN,CAAYC,UAAU,OAAtB,UACI,eAACvI,GAAA,EAAKwI,MAAN,sBACA,eAACxI,GAAA,EAAKO,QAAN,CACItE,KAAK,OACL2E,YAAY,gBACZD,MAAOuL,EACPE,UAAQ,EACR3L,SAAU,SAACP,GAAD,OAAOiM,EAAWjM,EAAEQ,OAAOC,aAI7C,eAACG,GAAA,EAAD,CAAQ7E,KAAK,SAAS8E,QAAQ,UAA9B,6BCrBDsL,GA/CO,SAAC,GAAiB,IAAfzM,EAAc,EAAdA,QACRqC,aAAY,SAAAnG,GAAK,OAAIA,EAAMkB,QAChCS,iBAGJmC,EAAQS,KAAK,aAGjB,MAA0CR,mBAAS,UAAnD,oBAAOnC,EAAP,KAAsB4O,EAAtB,KAEMpL,EAAWc,cAUjB,OACI,gBAAC,GAAD,WACI,eAAC,GAAD,CAAeuJ,OAAK,EAACC,OAAK,EAACC,OAAK,IAChC,iDACA,gBAACzL,GAAA,EAAD,CAAMC,SAZQ,SAACC,GToBM,IAACyB,ESnB1BzB,EAAEC,iBAEFe,GTiB0BS,ESjBEjE,ETiBO,SAACwD,GACxCA,EAAS,CACLjF,KAAMtD,EACNwD,QAASwF,IAGb5C,aAAa4J,QAAQ,gBAAiB1J,KAAK2J,UAAUjH,OSrBjD/B,EAAQS,KAAK,gBAOT,UACI,gBAACL,GAAA,EAAKsI,MAAN,WACI,eAACtI,GAAA,EAAKwI,MAAN,CAAYnE,GAAG,SAAf,2BACA,eAACd,GAAA,EAAD,UACA,eAACvD,GAAA,EAAKuM,MAAN,CACAtQ,KAAK,QACLuQ,MAAM,wBACNvL,GAAG,SACHT,KAAK,gBACLG,MAAM,SACN8L,SAAO,EAAChM,SAAU,SAACP,GAAD,OAAOoM,EAAiBpM,EAAEQ,OAAOC,eAKvD,eAACG,GAAA,EAAD,CAAQ7E,KAAK,SAAS8E,QAAQ,UAA9B,6BCsGD2L,GA5IU,SAAC,GAAiB,IAAf9M,EAAc,EAAdA,QAClBsB,EAAWc,cAEXhF,EAAOiF,aAAY,SAAAnG,GAAK,OAAIA,EAAMkB,QAGlC2P,EAAc,SAACC,GACjB,OAAQC,KAAKC,MAAY,IAANF,GAAa,KAAKrD,QAAQ,IAGjDvM,EAAK+P,WAAaJ,EAAY3P,EAAKC,UAAUoM,QACzC,SAACC,EAAKnM,GAAN,OAAemM,EAAMnM,EAAKsH,MAAQtH,EAAKiK,MACvC,IAEJpK,EAAKgQ,cAAgBL,EAAY3P,EAAK+P,WAAa,IAAM,EAAI,KAC7D/P,EAAKiQ,SAAWN,EAAY3D,QAAQ,IAAOhM,EAAK+P,YAAYxD,QAAQ,KACpEvM,EAAKiO,YAAcjC,OAAOhM,EAAK+P,YAAc/D,OAAOhM,EAAKgQ,eAAiBhE,OAAOhM,EAAKiQ,WAAW1D,QAAQ,GAEzG,IAAMlL,EAAc4D,aAAY,SAAAnG,GAAK,OAAIA,EAAMuC,eACvCC,EAA0BD,EAA1BC,MAAO3B,EAAmB0B,EAAnB1B,QAASL,EAAU+B,EAAV/B,MAExB8J,qBAAU,WACHzJ,GACCiD,EAAQS,KAAR,iBAAuB/B,EAAMyF,QAGlC,CAACnE,EAASjD,IAcb,OACI,iCACI,eAAC,GAAD,CAAe4O,OAAK,EAACC,OAAK,EAACC,OAAK,EAACC,OAAK,IACtC,gBAACpI,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKyD,GAAI,EAAT,SACI,gBAACY,GAAA,EAAD,CAAW7G,QAAQ,QAAnB,UACI,gBAAC6G,GAAA,EAAU3E,KAAX,WACI,2CACA,+BACI,gDACCjG,EAAKS,gBAAgBmO,QAF1B,KAEqC5O,EAAKS,gBAAgBqO,KAF1D,KAEkE9O,EAAKS,gBAAgBuO,WAFvF,KAEqGhP,EAAKS,gBAAgByO,cAI9H,gBAACtE,GAAA,EAAU3E,KAAX,WACI,iDACA,+CACCjG,EAAKU,iBAGV,gBAACkK,GAAA,EAAU3E,KAAX,WACI,8CAC2B,IAA1BjG,EAAKC,UAAU+K,OACV,eAAC,GAAD,iCAEE,eAACJ,GAAA,EAAD,CAAW7G,QAAQ,QAAnB,SACK/D,EAAKC,UAAUM,KAAI,SAACJ,EAAM+P,GAAP,OAChB,eAACtF,GAAA,EAAU3E,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKyD,GAAI,EAAT,SACI,eAACT,GAAA,EAAD,CAAOtC,IAAK9G,EAAK+G,MAAOsC,IAAKrJ,EAAKqD,KAAMiG,OAAK,EAAC2C,SAAO,MAEzD,eAAC7F,GAAA,EAAD,UACI,eAAC,QAAD,CAAMhB,GAAE,mBAAcpF,EAAKX,SAA3B,SACKW,EAAKqD,SAGd,gBAAC+C,GAAA,EAAD,CAAKyD,GAAI,EAAT,UACK7J,EAAKiK,IADV,OACmBjK,EAAKsH,MADxB,OACmCkI,EAAYxP,EAAKiK,IAAMjK,EAAKsH,cAXlDyI,gBAsBjD,eAAC3J,GAAA,EAAD,CAAKyD,GAAI,EAAT,SACI,eAAClD,GAAA,EAAD,UACI,gBAAC8D,GAAA,EAAD,CAAW7G,QAAQ,QAAnB,UACI,eAAC6G,GAAA,EAAU3E,KAAX,UACI,kDAEJ,eAAC2E,GAAA,EAAU3E,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,oBACA,gBAACA,GAAA,EAAD,eAAOvG,EAAK+P,mBAGpB,eAACnF,GAAA,EAAU3E,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,uBACA,gBAACA,GAAA,EAAD,eAAOvG,EAAKgQ,sBAGpB,eAACpF,GAAA,EAAU3E,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,kBACA,gBAACA,GAAA,EAAD,eAAOvG,EAAKiQ,iBAGpB,eAACrF,GAAA,EAAU3E,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,oBACA,gBAACA,GAAA,EAAD,eAAOvG,EAAKiO,mBAGpB,eAACrD,GAAA,EAAU3E,KAAX,UACK3G,GAAS,eAAC,GAAD,CAASyE,QAAQ,SAAjB,SAA2BzE,MAEzC,eAACsL,GAAA,EAAU3E,KAAX,UACI,eAACnC,GAAA,EAAD,CACI7E,KAAK,SACL4E,UAAU,YACVkH,SAA6B,IAAnB/K,EAAKC,UACfiG,QAnGN,SAAChD,GACvBgB,EJfmB,SAAC5C,GAAD,gDAAW,WAAO4C,EAAUC,GAAjB,wBAAAC,EAAA,sEAE9BF,EAAS,CACLjF,KAAM3B,KAHoB,EAMM6G,IAAfvD,EANS,EAMtBD,UAAaC,SAEfyD,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY3D,EAAS4D,SAXZ,SAePC,KAAM4G,KAAN,cAEnB/J,EACA+C,GAlB0B,gBAetBM,EAfsB,EAetBA,KAMRT,EAAS,CACLjF,KAAM1B,GACN4B,QAASwF,IAvBiB,kDA0B9BT,EAAS,CACLjF,KAAMzB,GACN2B,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA9Bc,0DAAX,wDIeVsL,CAAY,CACjB3O,WAAYxB,EAAKC,UACjBQ,gBAAiBT,EAAKS,gBACtBC,cAAeV,EAAKU,cACpBqP,WAAY/P,EAAK+P,WACjBC,cAAehQ,EAAKgQ,cACpBC,SAAUjQ,EAAKiQ,SACfhC,WAAYjO,EAAKiO,eAuFG,yC,SCyEjBmC,GAjMK,SAAC,GAAwB,IAAtBxG,EAAqB,EAArBA,MAAOhH,EAAc,EAAdA,QACpByN,EAAUzG,EAAMC,OAAO5F,GAE7B,EAAgCpB,oBAAS,GAAzC,oBAAOyN,EAAP,KAAiBC,EAAjB,KAEMrM,EAAWc,cAEXzD,EAAe0D,aAAY,SAAAnG,GAAK,OAAIA,EAAMyC,gBACxCD,EAA0BC,EAA1BD,MAAOpC,EAAmBqC,EAAnBrC,QAASI,EAAUiC,EAAVjC,MAElBmC,EAAWwD,aAAY,SAAAnG,GAAK,OAAIA,EAAM2C,YAC3B+O,EAAoC/O,EAA7CvC,QAA8BuR,EAAehP,EAAxB9B,QAEvB+B,EAAeuD,aAAY,SAAAnG,GAAK,OAAIA,EAAM4C,gBAC/BgP,EAA4ChP,EAArDxC,QAAkCyR,EAAmBjP,EAA5B/B,QAGzBiB,EADUqE,aAAY,SAAAnG,GAAK,OAAIA,EAAM6B,aACrCC,SAIF+O,EAAc,SAACC,GACjB,OAAQC,KAAKC,MAAY,IAANF,GAAa,KAAKrD,QAAQ,IAE7CrN,IACAoC,EAAMyO,WAAaJ,EAAYrO,EAAME,WAAW6K,QAC5C,SAACC,EAAKnM,GAAN,OAAemM,EAAMnM,EAAKsH,MAAQtH,EAAKiK,MACvC,KAIRhB,qBAAU,WACFxI,GACAgC,EAAQS,KAAK,UAGjB,ILUwBY,EKVlB2M,EAAe,yCAAG,iCAAAxM,EAAA,sEACaK,KAAMC,IAAI,sBADvB,gBACNmM,EADM,EACZlM,MACFmM,EAASC,SAASC,cAAc,WAC/B/R,KAAO,kBACd6R,EAAO7J,IAAP,kDAAwD4J,GACxDC,EAAOG,OAAQ,EACfH,EAAOI,OAAS,WACZX,GAAY,IAEhBQ,SAASI,KAAKC,YAAYN,GATN,4CAAH,sDAYjBxP,GAASA,EAAMyF,MAAQsJ,GAAWI,GAAcE,GAChDzM,EAAS,CAAEjF,KAAMlB,KACjBmG,EAAS,CAAEjF,KAAMP,KACjBwF,GLLoBD,EKKKoM,ELLN,yCAAQ,WAAOnM,EAAUC,GAAjB,wBAAAC,EAAA,sEAE/BF,EAAS,CACLjF,KAAMxB,KAHqB,EAMK0G,IAAfvD,EANU,EAMvBD,UAAaC,SAEfyD,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAY3D,EAAS4D,SAVX,SAcRC,KAAMC,IAAN,sBACJT,GACfI,GAhB2B,gBAcvBM,EAduB,EAcvBA,KAKRT,EAAS,CACLjF,KAAMvB,GACNyB,QAASwF,IArBkB,kDAwB/BT,EAAS,CACLjF,KAAMtB,GACNwB,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA5Be,0DAAR,2DKMZvD,EAAM4M,SACTmD,OAAOC,OAGPf,GAAY,GAFZK,OAMT,CAAC1M,EAAUtB,EAAShC,EAAUU,EAAOmP,EAAYE,EAAgBN,IAWpE,OAAOnR,EAAU,eAAC,GAAD,IACXI,EAAQ,eAAC,GAAD,CAASyE,QAAQ,SAAjB,SAA2BzE,IACnC,iCACE,yCAAWgC,EAAMyF,OACjB,gBAACT,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKyD,GAAI,EAAT,SACI,gBAACY,GAAA,EAAD,CAAW7G,QAAQ,QAAnB,UACI,gBAAC6G,GAAA,EAAU3E,KAAX,WACI,2CACA,+BACI,6CADJ,IAC6B3E,EAAMP,KAAKyC,QAExC,+BACI,8CAAwB,oBAAG+N,KAAI,iBAAYjQ,EAAMP,KAAK4L,OAA9B,SAAwCrL,EAAMP,KAAK4L,WAE/E,+BACI,gDACCrL,EAAMb,gBAAgBmO,QAF3B,KAEsCtN,EAAMb,gBAAgBqO,KAF5D,KAEoExN,EAAMb,gBAAgBuO,WAF1F,KAEwG1N,EAAMb,gBAAgByO,WAE7H5N,EAAM8M,YACH,gBAAC,GAAD,CAASrK,QAAQ,UAAjB,0BAAyCzC,EAAM+M,eAE/C,eAAC,GAAD,CAAStK,QAAQ,SAAjB,8BAIR,gBAAC6G,GAAA,EAAU3E,KAAX,WACI,iDACA,+BACI,+CACC3E,EAAMZ,iBAEVY,EAAM4M,OACH,gBAAC,GAAD,CAASnK,QAAQ,UAAjB,qBAAoCzC,EAAM6M,UAE1C,eAAC,GAAD,CAASpK,QAAQ,SAAjB,yBAIR,gBAAC6G,GAAA,EAAU3E,KAAX,WACI,8CAC6B,IAA5B3E,EAAME,WAAWwJ,OACZ,eAAC,GAAD,6BAEE,eAACJ,GAAA,EAAD,CAAW7G,QAAQ,QAAnB,SACKzC,EAAME,WAAWjB,KAAI,SAACJ,EAAM+P,GAAP,OAClB,eAACtF,GAAA,EAAU3E,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKyD,GAAI,EAAT,SACI,eAACT,GAAA,EAAD,CAAOtC,IAAK9G,EAAK+G,MAAOsC,IAAKrJ,EAAKqD,KAAMiG,OAAK,EAAC2C,SAAO,MAEzD,eAAC7F,GAAA,EAAD,UACI,eAAC,QAAD,CAAMhB,GAAE,mBAAcpF,EAAKX,SAA3B,SACKW,EAAKqD,SAGd,gBAAC+C,GAAA,EAAD,CAAKyD,GAAI,EAAT,UACK7J,EAAKiK,IADV,OACmBjK,EAAKsH,MADxB,OACmCkI,EAAYxP,EAAKiK,IAAMjK,EAAKsH,cAXlDyI,gBAsBjD,eAAC3J,GAAA,EAAD,CAAKyD,GAAI,EAAT,SACI,eAAClD,GAAA,EAAD,UACI,gBAAC8D,GAAA,EAAD,CAAW7G,QAAQ,QAAnB,UACI,eAAC6G,GAAA,EAAU3E,KAAX,UACI,kDAEJ,eAAC2E,GAAA,EAAU3E,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,oBACA,gBAACA,GAAA,EAAD,eAAOjF,EAAMyO,mBAGrB,eAACnF,GAAA,EAAU3E,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,uBACA,gBAACA,GAAA,EAAD,eAAOjF,EAAM0O,sBAGrB,eAACpF,GAAA,EAAU3E,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,kBACA,gBAACA,GAAA,EAAD,eAAOjF,EAAM2O,iBAGrB,eAACrF,GAAA,EAAU3E,KAAX,UACI,gBAACK,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,oBACA,gBAACA,GAAA,EAAD,eAAOjF,EAAM2M,oBAInB3M,EAAM4M,QACJ,gBAACtD,GAAA,EAAU3E,KAAX,WACKuK,GAAc,eAAC,GAAD,IACbF,EACE,eAAC,gBAAD,CAAckB,OAAQlQ,EAAM2M,WAAYwD,UAhH9C,SAACC,GAC3BC,QAAQC,IAAIF,GACZxN,ELegB,SAACmM,EAASqB,GAAV,gDAA4B,WAAOxN,EAAUC,GAAjB,wBAAAC,EAAA,sEAE5CF,EAAS,CACLjF,KAAMrB,KAHkC,EAMRuG,IAAfvD,EANuB,EAMpCD,UAAaC,SAEfyD,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY3D,EAAS4D,SAXE,SAerBC,KAAMiJ,IAAN,sBACJ2C,EADI,QAEnBqB,EACArN,GAlBwC,gBAepCM,EAfoC,EAepCA,KAMRT,EAAS,CACLjF,KAAMpB,GACNsB,QAASwF,IAvB+B,kDA0B5CT,EAAS,CACLjF,KAAMnB,GACNqB,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA9B4B,0DAA5B,wDKfPgN,CAASxB,EAASqB,OA6Gc,eAAC,GAAD,OAKpBhB,GAAkB,eAAC,GAAD,IAClB9P,GAAYA,EAASwF,SAAW9E,EAAM4M,SAAW5M,EAAM8M,aACpD,eAACxD,GAAA,EAAU3E,KAAX,UACI,eAACnC,GAAA,EAAD,CAAQ7E,KAAK,SAAS4E,UAAU,gBAAgBqC,QAlHzD,WACnBhC,ELgHoB,SAAC5C,GAAD,gDAAW,WAAO4C,EAAUC,GAAjB,wBAAAC,EAAA,sEAE/BF,EAAS,CACLjF,KAAMV,KAHqB,EAMK4F,IAAfvD,EANU,EAMvBD,UAAaC,SAEfyD,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAY3D,EAAS4D,SAVX,SAcRC,KAAMiJ,IAAN,sBACJpM,EAAMyF,IADF,YAEnB,GACA1C,GAjB2B,gBAcvBM,EAduB,EAcvBA,KAMRT,EAAS,CACLjF,KAAMT,GACNW,QAASwF,IAtBkB,kDAyB/BT,EAAS,CACLjF,KAAMR,GACNU,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA7Be,0DAAX,wDKhHXiN,CAAaxQ,KAiHM,+CChHrByQ,GAxEQ,SAAC,GAAiB,IAAfnP,EAAc,EAAdA,QAChBsB,EAAWc,cAEX/D,EAAWgE,aAAY,SAAAnG,GAAK,OAAIA,EAAMmC,YACpC/B,EAA0B+B,EAA1B/B,QAASI,EAAiB2B,EAAjB3B,MAAO4B,EAAUD,EAAVC,MAGhBN,EADUqE,aAAY,SAAAnG,GAAK,OAAIA,EAAM6B,aACrCC,SAGSoR,EADE/M,aAAY,SAAAnG,GAAK,OAAIA,EAAMqC,cACtCxB,QAERyJ,qBAAU,WACHxI,GAAYA,EAASwF,QACpBlC,EzBmKa,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAEvBF,EAAS,CACLjF,KAAMtC,KAHa,EAMawH,IAAfvD,EANE,EAMfD,UAAaC,SAEfyD,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAY3D,EAAS4D,SAVnB,SAcAC,KAAMC,IAAN,aAEnBL,GAhBmB,gBAcfM,EAde,EAcfA,KAKRT,EAAS,CACLjF,KAAMrC,GACNuC,QAASwF,IArBU,kDAwBvBT,EAAS,CACLjF,KAAMpC,GACNsC,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA5BO,0DAAN,yDyBjKbjC,EAAQS,KAAK,YAElB,CAACa,EAAUtB,EAAShC,EAAUoR,IAEjC,IAAMC,EAAgB,SAAChO,GAChBoN,OAAOa,QAAQ,kBACdhO,EzB4Lc,SAACD,GAAD,gDAAQ,WAAOC,EAAUC,GAAjB,oBAAAC,EAAA,sEAE1BF,EAAS,CACLjF,KAAMlC,KAHgB,EAMUoH,IAAfvD,EANK,EAMlBD,UAAaC,SAEfyD,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAY3D,EAAS4D,SAVhB,SAcpBC,KAAM0N,OAAN,qBACYlO,GACdI,GAhBsB,OAmB1BH,EAAS,CAAEjF,KAAMjC,KAnBS,gDAqB1BkH,EAAS,CACLjF,KAAMhC,GACNkC,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UAzBU,yDAAR,wDyB5LLuN,CAAWnO,KAI5B,OACI,iCACI,wCACC/E,EAAU,eAAC,GAAD,IAAaI,EAAQ,eAAC,GAAD,CAASyE,QAAQ,SAAjB,SAA2BzE,IACvD,gBAACsO,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAACnK,UAAU,WAAnD,UACI,iCACI,gCACI,qCACA,uCACA,wCACA,wCACA,6BAGR,iCACK3C,EAAMX,KAAI,SAAAQ,GAAI,OACX,gCACI,8BAAKA,EAAKgG,MACV,8BAAKhG,EAAKyC,OACV,8BAAI,oBAAG+N,KAAI,iBAAYxQ,EAAK4L,OAAxB,SAAkC5L,EAAK4L,UAC3C,8BACK5L,EAAKqF,QACF,oBAAGvC,UAAU,eAAe8C,MAAO,CAAED,MAAO,WAE5C,oBAAG7C,UAAU,eAAe8C,MAAO,CAAED,MAAO,WAGpD,gCACI,eAAC,iBAAD,CAAenB,GAAE,sBAAiBxE,EAAKgG,IAAtB,SAAjB,SACI,eAACjD,GAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,SAAlC,SACI,oBAAGA,UAAU,oBAGrB,eAACC,GAAA,EAAD,CAAQC,QAAQ,SAASF,UAAU,SAASqC,QAAS,kBAAM+L,EAAclR,EAAKgG,MAA9E,SACI,oBAAGlD,UAAU,wBAlBhB9C,EAAKgG,iBC8C3BsL,GAtFQ,SAAC,GAAwB,IAAtBzI,EAAqB,EAArBA,MAAOhH,EAAc,EAAdA,QACvB0P,EAAS1I,EAAMC,OAAO5F,GAE5B,EAAwBpB,mBAAS,IAAjC,oBAAOW,EAAP,KAAa0J,EAAb,KACA,EAA0BrK,mBAAS,IAAnC,oBAAO8J,EAAP,KAAcC,EAAd,KACA,EAA8B/J,oBAAS,GAAvC,oBAAOuD,EAAP,KAAgBmM,EAAhB,KAEMrO,EAAWc,cAEXlE,EAAcmE,aAAY,SAAAnG,GAAK,OAAIA,EAAMgC,eACvC5B,EAAyB4B,EAAzB5B,QAASI,EAAgBwB,EAAhBxB,MAAOyB,EAASD,EAATC,KAElBK,EAAa6D,aAAY,SAAAnG,GAAK,OAAIA,EAAMsC,cAC7BoR,EAA8DpR,EAAvElC,QAA+BuT,EAAwCrR,EAA/C9B,MAA6BoT,EAAkBtR,EAA3BzB,QAEpDyJ,qBAAU,WACJsJ,GACCxO,EAAS,CAAEjF,KAAM5B,KACjBuF,EAAQS,KAAK,oBAERtC,EAAKyC,MAAQzC,EAAKgG,MAAQuL,GAG1BpF,EAAQnM,EAAKyC,MACboJ,EAAS7L,EAAK4L,OACd4F,EAAWxR,EAAKqF,UAJhBlC,EAASF,GAAesO,MAOjC,CAACpO,EAAUtB,EAAS0P,EAAQvR,EAAM2R,IAQrC,OACI,iCACI,eAAC,QAAD,CAAMnN,GAAG,kBAAkB1B,UAAU,qBAArC,qBAGA,gBAAC,GAAD,WACI,4CACC2O,GAAiB,eAAC,GAAD,IACjBC,GAAe,eAAC,GAAD,CAAS1O,QAAQ,SAAjB,SAA2B0O,IAC1CvT,EAAU,eAAC,GAAD,IAAaI,EAAQ,eAAC,GAAD,CAASyE,QAAQ,SAAjB,SAA2BzE,IACvD,gBAAC0D,GAAA,EAAD,CAAMC,SAhBA,SAACC,GACnBA,EAAEC,iBAEFe,E1B6MkB,SAACnD,GAAD,gDAAU,WAAOmD,EAAUC,GAAjB,wBAAAC,EAAA,sEAE5BF,EAAS,CACLjF,KAAM/B,KAHkB,EAMQiH,IAAfvD,EANO,EAMpBD,UAAaC,SAEfyD,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY3D,EAAS4D,SAXd,SAeLC,KAAMiJ,IAAN,qBACL3M,EAAKgG,KACnBhG,EACAsD,GAlBwB,gBAepBM,EAfoB,EAepBA,KAMRT,EAAS,CAAEjF,KAAM9B,KAEjB+G,EAAS,CAAEjF,KAAM7C,EAAsB+C,QAASwF,IAvBpB,kDAyB5BT,EAAS,CACLjF,KAAM7B,GACN+B,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA7BY,0DAAV,wD0B7MT8N,CAAW,CAAE5L,IAAKuL,EAAQ9O,OAAMmJ,QAAOvG,cAapC,UACI,gBAACpD,GAAA,EAAKsI,MAAN,CAAYC,UAAU,OAAtB,UACI,eAACvI,GAAA,EAAKwI,MAAN,mBACA,eAACxI,GAAA,EAAKO,QAAN,CACItE,KAAK,OACL2E,YAAY,aACZD,MAAOH,EACPC,SAAU,SAACP,GAAD,OAAOgK,EAAQhK,EAAEQ,OAAOC,aAI1C,gBAACX,GAAA,EAAKsI,MAAN,CAAYC,UAAU,QAAtB,UACI,eAACvI,GAAA,EAAKwI,MAAN,4BACA,eAACxI,GAAA,EAAKO,QAAN,CACItE,KAAK,QACL2E,YAAY,cACZD,MAAOgJ,EACPlJ,SAAU,SAACP,GAAD,OAAO0J,EAAS1J,EAAEQ,OAAOC,aAI3C,eAACX,GAAA,EAAKsI,MAAN,CAAYC,UAAU,UAAtB,SACI,eAACvI,GAAA,EAAKuM,MAAN,CACItQ,KAAK,WACLuQ,MAAM,WACNC,QAASrJ,EACT3C,SAAU,SAACP,GAAD,OAAOqP,EAAWrP,EAAEQ,OAAO+L,cAI7C,eAAC3L,GAAA,EAAD,CAAQ7E,KAAK,SAAS8E,QAAQ,UAA9B,8BCgCT6O,GA5GW,SAAC,GAAwB,IAAtBhQ,EAAqB,EAArBA,QACnBoG,EADwC,EAAZY,MACTC,OAAOb,YAAc,EAExC9E,EAAWc,cAEXnG,EAAcoG,aAAY,SAAAnG,GAAK,OAAIA,EAAMD,eACvCK,EAA0CL,EAA1CK,QAASI,EAAiCT,EAAjCS,MAAOP,EAA0BF,EAA1BE,SAAUM,EAAgBR,EAAhBQ,KAAMD,EAAUP,EAAVO,MAElCM,EAAgBuF,aAAY,SAAAnG,GAAK,OAAIA,EAAMY,iBAEpCmT,EAGTnT,EAHAR,QACO4T,EAEPpT,EAFAJ,MACS0S,EACTtS,EADAC,QAGEC,EAAgBqF,aAAY,SAAAnG,GAAK,OAAIA,EAAMc,iBAEpCmT,EAITnT,EAJAV,QACO8T,EAGPpT,EAHAN,MACS2T,EAETrT,EAFAD,QACSuT,EACTtT,EADAJ,QAIIoB,EADUqE,aAAY,SAAAnG,GAAK,OAAIA,EAAM6B,aACrCC,SAERwI,qBAAU,WACNlF,EAAS,CAAEjF,KAAMrE,IAEbgG,EAASwF,SACTxD,EAAQS,KAAK,UAGd4P,EACCrQ,EAAQS,KAAR,yBAA+B6P,EAAenM,IAA9C,UAEA7C,EAAS6E,GAAa,GAAIC,MAE/B,CAAC9E,EAAUtB,EAAShC,EAAUoR,EAAeiB,EAAeC,EAAgBlK,IAE/E,IAAMiJ,EAAgB,SAAChO,GAChBoN,OAAOa,QAAQ,kBACdhO,ElBaiB,SAACD,GAAD,gDAAQ,WAAOC,EAAUC,GAAjB,oBAAAC,EAAA,sEAE7BF,EAAS,CACLjF,KAAM3E,IAHmB,EAMO6J,IAAfvD,EANQ,EAMrBD,UAAaC,SAEfyD,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAY3D,EAAS4D,SAVb,SAcvBC,KAAM0N,OAAN,wBACelO,GACjBI,GAhByB,OAmB7BH,EAAS,CACLjF,KAAM1E,IApBmB,gDAuB7B2J,EAAS,CACLjF,KAAMzE,EACN2E,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA3Ba,yDAAR,wDkBbRsO,CAAclP,KAQ/B,OACI,iCACI,gBAACqC,GAAA,EAAD,CAAKzC,UAAU,qBAAf,UACI,eAAC0C,GAAA,EAAD,UACI,6CAEJ,eAACA,GAAA,EAAD,CAAK1C,UAAU,aAAf,SACI,gBAACC,GAAA,EAAD,CAAQD,UAAU,OAAOqC,QAXZ,WACzBhC,ElBwCqB,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAE3BF,EAAS,CACLjF,KAAMxE,IAHiB,EAMS0J,IAAfvD,EANM,EAMnBD,UAAaC,SAEfyD,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAY3D,EAAS4D,SAVf,SAcJC,KAAM4G,KAAN,iBAEnB,GACAhH,GAjBuB,gBAcnBM,EAdmB,EAcnBA,KAMRT,EAAS,CACLjF,KAAMvE,EACNyE,QAASwF,IAtBc,kDAyB3BT,EAAS,CACLjF,KAAMtE,EACNwE,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA7BW,0DAAN,0DkB9BT,UACI,oBAAGhB,UAAU,gBADjB,0BAKPgP,GAAiB,eAAC,GAAD,IACjBC,GAAe,eAAC,GAAD,CAAS/O,QAAQ,SAAjB,SAA2B+O,IAC1CC,GAAiB,eAAC,GAAD,IACjBC,GAAe,eAAC,GAAD,CAASjP,QAAQ,SAAjB,SAA2BiP,IAC1C9T,EAAU,eAAC,GAAD,IAAaI,EAAQ,eAAC,GAAD,CAASyE,QAAQ,SAAjB,SAA2BzE,IACvD,iCACA,gBAACsO,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAACnK,UAAU,WAAnD,UACI,iCACI,gCACI,qCACA,uCACA,wCACA,2CACA,wCACA,6BAGR,iCACK9E,EAASwB,KAAI,SAAAf,GAAO,OACjB,gCACI,8BAAKA,EAAQuH,MACb,8BAAKvH,EAAQgE,OACb,oCAAMhE,EAAQiI,SACd,8BAAKjI,EAAQ4T,WACb,8BAAK5T,EAAQ6T,QACb,gCACI,eAAC,iBAAD,CAAe9N,GAAE,yBAAoB/F,EAAQuH,IAA5B,SAAjB,SACI,eAACjD,GAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,SAAlC,SACI,oBAAGA,UAAU,oBAGrB,eAACC,GAAA,EAAD,CAAQC,QAAQ,SAASF,UAAU,SAASqC,QAAS,kBAAM+L,EAAczS,EAAQuH,MAAjF,SACI,oBAAGlD,UAAU,wBAbhBrE,EAAQuH,aAoB7B,eAAC,GAAD,CAAU3H,MAAOA,EAAOC,KAAMA,EAAM+G,SAAS,WC4E9CkN,GAhLW,SAAC,GAAwB,IAAtB1J,EAAqB,EAArBA,MAAOhH,EAAc,EAAdA,QAC1BwI,EAAYxB,EAAMC,OAAO5F,GAE/B,EAAwBpB,mBAAS,IAAjC,oBAAOW,EAAP,KAAa0J,EAAb,KACA,EAA0BrK,mBAAS,GAAnC,oBAAO4E,EAAP,KAAc8L,EAAd,KACA,EAA0B1Q,mBAAS,IAAnC,oBAAOqE,EAAP,KAAcsM,EAAd,KACA,EAA0B3Q,mBAAS,IAAnC,oBAAOwQ,EAAP,KAAcI,EAAd,KACA,EAAgC5Q,mBAAS,IAAzC,oBAAOuQ,EAAP,KAAiBM,EAAjB,KACA,EAAwC7Q,qBAAxC,oBAAOgI,EAAP,KAAqB8I,EAArB,KACA,EAAsC9Q,mBAAS,IAA/C,oBAAO8F,EAAP,KAAoBiL,EAApB,KACA,EAAkC/Q,oBAAS,GAA3C,oBAAOgR,EAAP,KAAkBC,EAAlB,KAEM5P,EAAWc,cAEXzF,EAAiB0F,aAAY,SAAAnG,GAAK,OAAIA,EAAMS,kBAC1CL,EAA4BK,EAA5BL,QAASI,EAAmBC,EAAnBD,MAAOE,EAAYD,EAAZC,QAElBK,EAAgBoF,aAAY,SAAAnG,GAAK,OAAIA,EAAMe,iBAChC2S,EAA8D3S,EAAvEX,QAA+BuT,EAAwC5S,EAA/CP,MAA6BoT,EAAkB7S,EAA3BF,QAEpDyJ,qBAAU,WACHsJ,GACCxO,EAAS,CAAEjF,KAAMjE,IACjB4H,EAAQS,KAAK,uBAET7D,EAAQgE,MAAQhE,EAAQuH,MAAQqE,GAGhC8B,EAAQ1N,EAAQgE,MAChB+P,EAAS/T,EAAQiI,OACjB+L,EAAShU,EAAQ0H,OACjBuM,EAASjU,EAAQ6T,OACjBK,EAAYlU,EAAQ4T,UACpBO,EAAgBnU,EAAQqL,cACxB+I,EAAepU,EAAQmJ,cARvBzE,EAASgF,GAAmBkC,MAYrC,CAAClH,EAAUtB,EAASwI,EAAW5L,EAASkT,IAE3C,IAAMqB,EAAiB,yCAAG,WAAO7Q,GAAP,wBAAAkB,EAAA,6DAChB4P,EAAO9Q,EAAEQ,OAAOuQ,MAAM,IACtBC,EAAW,IAAIC,UACZC,OAAO,QAASJ,GACzBF,GAAa,GAJS,SAOZzP,EAAS,CACXC,QAAS,CACL,eAAgB,wBATN,SAaKG,KAAM4G,KAAK,cAAe6I,EAAU7P,GAbzC,gBAaVM,EAbU,EAaVA,KAER6O,EAAS7O,GACTmP,GAAa,GAhBK,kDAkBlBnC,QAAQrS,MAAR,MACAwU,GAAa,GAnBK,0DAAH,sDAsCvB,OACI,iCACI,eAAC,QAAD,CAAMvO,GAAG,qBAAqB1B,UAAU,qBAAxC,qBAGA,gBAAC,GAAD,WACI,+CACC2O,GAAiB,eAAC,GAAD,IACjBC,GAAe,eAAC,GAAD,CAAS1O,QAAQ,SAAjB,SAA2B0O,IAC1CvT,EAAU,eAAC,GAAD,IAAaI,EAAQ,eAAC,GAAD,CAASyE,QAAQ,SAAjB,SAA2BzE,IACvD,gBAAC0D,GAAA,EAAD,CAAMC,SAzBA,SAACC,GACnBA,EAAEC,iBAEFe,EnBsDqB,SAAC1E,GAAD,gDAAa,WAAO0E,EAAUC,GAAjB,wBAAAC,EAAA,sEAElCF,EAAS,CACLjF,KAAMpE,IAHwB,EAMEsJ,IAAfvD,EANa,EAM1BD,UAAaC,SAEfyD,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY3D,EAAS4D,SAXR,SAeXC,KAAMiJ,IAAN,wBACFlO,EAAQuH,KACzBvH,EACA6E,GAlB8B,gBAe1BM,EAf0B,EAe1BA,KAMRT,EAAS,CACLjF,KAAMnE,EACNqE,QAASwF,IAvBqB,kDA0BlCT,EAAS,CACLjF,KAAMlE,EACNoE,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA9BkB,0DAAb,wDmBtDZwP,CAAc,CACnBtN,IAAKqE,EACL5H,OACAiE,QACAP,QACAmM,QACAD,WACAzK,cACAkC,mBAcQ,UACI,gBAAC7H,GAAA,EAAKsI,MAAN,CAAYC,UAAU,OAAtB,UACI,eAACvI,GAAA,EAAKwI,MAAN,mBACA,eAACxI,GAAA,EAAKO,QAAN,CACItE,KAAK,OACL2E,YAAY,aACZD,MAAOH,EACPC,SAAU,SAACP,GAAD,OAAOgK,EAAQhK,EAAEQ,OAAOC,aAI1C,gBAACX,GAAA,EAAKsI,MAAN,CAAYC,UAAU,QAAtB,UACI,eAACvI,GAAA,EAAKwI,MAAN,oBACA,eAACxI,GAAA,EAAKO,QAAN,CACItE,KAAK,SACL2E,YAAY,cACZD,MAAO8D,EACPhE,SAAU,SAACP,GAAD,OAAOqQ,EAASrQ,EAAEQ,OAAOC,aAI3C,gBAACX,GAAA,EAAKsI,MAAN,CAAYC,UAAU,QAAtB,UACI,eAACvI,GAAA,EAAKwI,MAAN,oBACA,eAACxI,GAAA,EAAKO,QAAN,CACItE,KAAK,OACL2E,YAAY,kBACZD,MAAOuD,EACPzD,SAAU,SAACP,GAAD,OAAOsQ,EAAStQ,EAAEQ,OAAOC,UAEvC,eAACX,GAAA,EAAKsR,KAAN,CACIrQ,GAAG,aACHuL,MAAM,cACN+E,QAAM,EACN9Q,SAAUsQ,IAEbF,GAAa,eAAC,GAAD,OAGlB,gBAAC7Q,GAAA,EAAKsI,MAAN,CAAYC,UAAU,QAAtB,UACI,eAACvI,GAAA,EAAKwI,MAAN,oBACA,eAACxI,GAAA,EAAKO,QAAN,CACItE,KAAK,OACL2E,YAAY,cACZD,MAAO0P,EACP5P,SAAU,SAACP,GAAD,OAAOuQ,EAASvQ,EAAEQ,OAAOC,aAI3C,gBAACX,GAAA,EAAKsI,MAAN,CAAYC,UAAU,eAAtB,UACI,eAACvI,GAAA,EAAKwI,MAAN,oBACA,eAACxI,GAAA,EAAKO,QAAN,CACItE,KAAK,SACL2E,YAAY,uBACZD,MAAOkH,EACPpH,SAAU,SAACP,GAAD,OAAOyQ,EAAgBzQ,EAAEQ,OAAOC,aAIlD,gBAACX,GAAA,EAAKsI,MAAN,CAAYC,UAAU,WAAtB,UACI,eAACvI,GAAA,EAAKwI,MAAN,uBACA,eAACxI,GAAA,EAAKO,QAAN,CACItE,KAAK,OACL2E,YAAY,iBACZD,MAAOyP,EACP3P,SAAU,SAACP,GAAD,OAAOwQ,EAAYxQ,EAAEQ,OAAOC,aAI9C,gBAACX,GAAA,EAAKsI,MAAN,CAAYC,UAAU,cAAtB,UACI,eAACvI,GAAA,EAAKwI,MAAN,0BACA,eAACxI,GAAA,EAAKO,QAAN,CACItE,KAAK,OACL2E,YAAY,oBACZD,MAAOgF,EACPlF,SAAU,SAACP,GAAD,OAAO0Q,EAAe1Q,EAAEQ,OAAOC,aAIjD,eAACG,GAAA,EAAD,CAAQ7E,KAAK,SAAS8E,QAAQ,UAA9B,8BCnGTyQ,GAtES,SAAC,GAAiB,IAAf5R,EAAc,EAAdA,QACjBsB,EAAWc,cAEXnD,EAAYoD,aAAY,SAAAnG,GAAK,OAAIA,EAAM+C,aACrC3C,EAA2B2C,EAA3B3C,QAASI,EAAkBuC,EAAlBvC,MAAOsC,EAAWC,EAAXD,OAGhBhB,EADUqE,aAAY,SAAAnG,GAAK,OAAIA,EAAM6B,aACrCC,SAUR,OARAwI,qBAAU,WACHxI,GAAYA,EAASwF,QACpBlC,EV2Ic,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAExBF,EAAS,CACLjF,KAAMb,KAHc,EAMY+F,IAAfvD,EANG,EAMhBD,UAAaC,SAEfyD,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAY3D,EAAS4D,SAVlB,SAcDC,KAAMC,IAAN,cAEnBL,GAhBoB,gBAchBM,EAdgB,EAchBA,KAKRT,EAAS,CACLjF,KAAMZ,GACNc,QAASwF,IArBW,kDAwBxBT,EAAS,CACLjF,KAAMX,GACNa,QAAS,KAAMyF,UAAY,KAAMA,SAASD,KAAKE,QACzC,KAAMD,SAASD,KAAKE,QACpB,KAAMA,UA5BQ,0DAAN,yDUzIdjC,EAAQS,KAAK,YAElB,CAACa,EAAUtB,EAAShC,IAGnB,iCACI,yCACC1B,EAAU,eAAC,GAAD,IAAaI,EAAQ,eAAC,GAAD,CAASyE,QAAQ,SAAjB,SAA2BzE,IACvD,gBAACsO,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAACnK,UAAU,WAAnD,UACI,iCACI,gCACI,qCACA,uCACA,uCACA,wCACA,uCACA,4CACA,6BAGR,iCACKjC,EAAOrB,KAAI,SAAAe,GAAK,OACb,gCACI,8BAAKA,EAAMyF,MACX,8BAAKzF,EAAMP,MAAQO,EAAMP,KAAKyC,OAC9B,8BAAKlC,EAAM4J,UAAUC,UAAU,EAAG,MAClC,oCAAM7J,EAAM2M,cACZ,8BACK3M,EAAM4M,OACH5M,EAAM6M,OAAOhD,UAAU,EAAG,IAE1B,oBAAGtH,UAAU,eAAe8C,MAAO,CAAED,MAAO,WAGpD,8BACKpF,EAAM8M,YACH9M,EAAM+M,YAAYlD,UAAU,EAAG,IAE/B,oBAAGtH,UAAU,eAAe8C,MAAO,CAAED,MAAO,WAGpD,8BACI,eAAC,iBAAD,CAAenB,GAAE,iBAAYjE,EAAMyF,KAAnC,SACI,eAACjD,GAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,SAAlC,2BArBHvC,EAAMyF,iBCU5B0N,GAhCH,WACV,OACI,gBAAC,iBAAD,WACE,eAAC,GAAD,IACA,uBAAM5Q,UAAU,OAAhB,SACE,gBAACyB,GAAA,EAAD,WACE,eAAC,KAAD,CAAOoP,KAAK,aAAaC,UAAWvE,KACpC,eAAC,KAAD,CAAOsE,KAAK,YAAYC,UAAWhG,KACnC,eAAC,KAAD,CAAO+F,KAAK,WAAWC,UAAWtF,KAClC,eAAC,KAAD,CAAOqF,KAAK,cAAcC,UAAWjF,KACrC,eAAC,KAAD,CAAOgF,KAAK,SAASC,UAAWjI,KAChC,eAAC,KAAD,CAAOgI,KAAK,YAAYC,UAAW1H,KACnC,eAAC,KAAD,CAAOyH,KAAK,WAAWC,UAAWpH,KAClC,eAAC,KAAD,CAAOmH,KAAK,eAAeC,UAAWxK,KACtC,eAAC,KAAD,CAAOuK,KAAK,aAAaC,UAAW9I,KACpC,eAAC,KAAD,CAAO6I,KAAK,kBAAkBC,UAAW5C,KACzC,eAAC,KAAD,CAAO2C,KAAK,uBAAuBC,UAAWtC,KAC9C,eAAC,KAAD,CAAOqC,KAAK,qBAAqBC,UAAW/B,GAAmBgC,OAAK,IACpE,eAAC,KAAD,CAAOF,KAAK,iCAAiCC,UAAW/B,GAAmBgC,OAAK,IAChF,eAAC,KAAD,CAAOF,KAAK,0BAA0BC,UAAWrB,KACjD,eAAC,KAAD,CAAOoB,KAAK,mBAAmBC,UAAWH,KAC1C,eAAC,KAAD,CAAOE,KAAK,mBAAmBC,UAAWhL,GAAYiL,OAAK,IAC3D,eAAC,KAAD,CAAOF,KAAK,oBAAoBC,UAAWhL,GAAYiL,OAAK,IAC5D,eAAC,KAAD,CAAOF,KAAK,oCAAoCC,UAAWhL,GAAYiL,OAAK,IAC5E,eAAC,KAAD,CAAOF,KAAK,IAAIC,UAAWhL,GAAYiL,OAAK,SAGhD,eAAC,GAAD,QCpCOC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAAS1P,OACP,eAAC,IAAD,CAAUrD,MAAOA,GAAjB,SACE,eAAC,GAAD,MAEFwO,SAASwE,eAAe,SAM1BV,M","file":"static/js/main.0cce8cfa.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { \r\n    productListReducer, \r\n    productDetailsReducer, \r\n    productDeleteReducer, \r\n    productCreateReducer, \r\n    productUpdateReducer, \r\n    productReviewCreateReducer, \r\n    productTopRatedReducer\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { \r\n    userLoginReducer, \r\n    userRegisterReducer, \r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer\r\n} from './reducers/userReducers'\r\nimport { \r\n    orderCreateReducer, \r\n    orderDetailsReducer, \r\n    orderPayReducer, \r\n    orderListMyReducer, \r\n    orderListReducer, \r\n    orderDeliverReducer \r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initialState = {\r\n    cart: { \r\n        cartItems: cartItemsFromStorage, \r\n        shippingAddress: shippingAddressFromStorage \r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage}\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer, \r\n    initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store","import { \r\n    PRODUCT_LIST_REQUEST, \r\n    PRODUCT_LIST_SUCCESS, \r\n    PRODUCT_LIST_FAIL, \r\n    PRODUCT_DETAILS_REQUEST, \r\n    PRODUCT_DETAILS_SUCCESS, \r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return {\r\n                loading: true,\r\n                products: []\r\n            }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                pages: action.payload.pages,\r\n                page: action.payload.page\r\n            }\r\n        case PRODUCT_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return {\r\n                loading: true,\r\n                ...state\r\n            }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                product: action.payload\r\n            }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case PRODUCT_DELETE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                product: action.payload\r\n            }\r\n        case PRODUCT_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                product: action.payload\r\n            }\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n            }\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return {\r\n                loading: true,\r\n                products: []\r\n            }\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload,\r\n            }\r\n        case PRODUCT_TOP_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAdress: {} }, action) => {\r\n    switch(action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if(existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existItem.product ? item : x\r\n                    )\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n            case CART_REMOVE_ITEM:\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.filter(item => item.product !== action.payload)\r\n                }\r\n            case CART_SAVE_SHIPPING_ADDRESS:\r\n                return {\r\n                    ...state,\r\n                    shippingAddress: action.payload\r\n                }\r\n            case CART_SAVE_PAYMENT_METHOD:\r\n                return {\r\n                    ...state,\r\n                    paymentMethod: action.payload\r\n                }\r\n        default:\r\n            return state\r\n    }\r\n}","import { \r\n    USER_DELETE_FAIL,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DETAILS_FAIL, \r\n    USER_DETAILS_REQUEST, \r\n    USER_DETAILS_RESET, \r\n    USER_DETAILS_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_RESET,\r\n    USER_LIST_SUCCESS,\r\n    USER_LOGIN_FAIL, \r\n    USER_LOGIN_REQUEST, \r\n    USER_LOGIN_SUCCESS, \r\n    USER_LOGOUT, \r\n    USER_REGISTER_FAIL, \r\n    USER_REGISTER_REQUEST, \r\n    USER_REGISTER_SUCCESS, \r\n    USER_UPDATE_FAIL, \r\n    USER_UPDATE_PROFILE_FAIL, \r\n    USER_UPDATE_PROFILE_REQUEST, \r\n    USER_UPDATE_PROFILE_RESET, \r\n    USER_UPDATE_PROFILE_SUCCESS, \r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_RESET,\r\n    USER_UPDATE_SUCCESS\r\n} from \"../constants/userConstants\"\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case USER_LOGIN_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                userInfo: action.payload\r\n            }\r\n        case USER_LOGIN_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case USER_REGISTER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                userInfo: action.payload\r\n            }\r\n        case USER_REGISTER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case USER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                user: action.payload\r\n            }\r\n        case USER_DETAILS_FAIL:\r\n           return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case USER_DETAILS_RESET:\r\n            return {\r\n                user: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                userInfo: action.payload\r\n            }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n           return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case USER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                users: action.payload\r\n            }\r\n        case USER_LIST_FAIL:\r\n           return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case USER_LIST_RESET:\r\n            return {\r\n                users: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case USER_DELETE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case USER_DELETE_FAIL:\r\n           return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case USER_UPDATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case USER_UPDATE_FAIL:\r\n           return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case USER_UPDATE_RESET:\r\n            return {\r\n                user: {}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { \r\n    ORDER_CREATE_REQUEST, \r\n    ORDER_CREATE_SUCCESS, \r\n    ORDER_CREATE_FAIL, \r\n    ORDER_DETAILS_REQUEST, \r\n    ORDER_DETAILS_SUCCESS, \r\n    ORDER_DETAILS_FAIL, \r\n    ORDER_PAY_REQUEST, \r\n    ORDER_PAY_SUCCESS, \r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET, \r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch(action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch(action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch(action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst SearchBox = ({ history }) => {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(keyword.trim()) {\r\n            history.push(`/search/${keyword}`)\r\n        } else {\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control \r\n                type='text' \r\n                name='q' \r\n                onChange={(e)=> setKeyword(e.target.value)} \r\n                placeholder='Search Products...' \r\n                className='mr-ms-2 ml-sm-5'\r\n            ></Form.Control>\r\n            <Button type='submit' variant='outline-success' className='p-2'>\r\n                Search\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\nimport { \r\n    USER_DETAILS_FAIL, \r\n    USER_DETAILS_REQUEST, \r\n    USER_DETAILS_SUCCESS, \r\n    USER_LOGIN_FAIL, \r\n    USER_LOGIN_REQUEST, \r\n    USER_LOGIN_SUCCESS, \r\n    USER_LOGOUT, USER_REGISTER_FAIL, \r\n    USER_REGISTER_REQUEST, \r\n    USER_REGISTER_SUCCESS, \r\n    USER_UPDATE_PROFILE_FAIL, \r\n    USER_UPDATE_PROFILE_REQUEST, \r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_DETAILS_RESET,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_REQUEST\r\n} from \"../constants/userConstants\"\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login', \r\n            { email, password }, \r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users', \r\n            { name, email, password }, \r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}`, \r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile`,\r\n            user, \r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(\r\n            `/api/users/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({ type: USER_DELETE_SUCCESS })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/${user._id}`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({ type: USER_UPDATE_SUCCESS })\r\n\r\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nconst Header = () => {\r\n    const disptatch = useDispatch()\r\n    \r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const logoutHandler = () => {\r\n        disptatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>                    \r\n                        <Navbar.Brand>ProShop</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Route render={({ history }) => <SearchBox history={history}/>} />\r\n                        <Nav className=\"ml-auto\">\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link><i className='fas fa-shopping-cart'></i>Cart</Nav.Link>\r\n                            </LinkContainer>\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>\r\n                                        Logout\r\n                                    </NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ) : (\r\n                            <LinkContainer to='/login'>\r\n                                <Nav.Link><i className='fas fa-user'></i>Sign In</Nav.Link>\r\n                            </LinkContainer>\r\n                        )}\r\n                        {userInfo && userInfo.isAdmin && (\r\n                            <NavDropdown title='Admin' id='adminmenu'>\r\n                                <LinkContainer to='/admin/userlist'>\r\n                                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to='/admin/productlist'>\r\n                                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to='/admin/orderList'>\r\n                                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                            </NavDropdown>\r\n                        )}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Copyright &copy; ProShop\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{color}}\r\n                    className={\r\n                        value >= 1 \r\n                            ? 'fas fa-star' \r\n                            : value >= 0.5 \r\n                            ? 'fas fa-star-half-alt' \r\n                            : 'far fa-star'\r\n                    }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                    className={\r\n                        value >= 2 \r\n                            ? 'fas fa-star' \r\n                            : value >= 1.5 \r\n                            ? 'fas fa-star-half-alt' \r\n                            : 'far fa-star'\r\n                    }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                    className={\r\n                        value >= 3 \r\n                            ? 'fas fa-star' \r\n                            : value >= 2.5 \r\n                            ? 'fas fa-star-half-alt' \r\n                            : 'far fa-star'\r\n                    }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                    className={\r\n                        value >= 4 \r\n                            ? 'fas fa-star' \r\n                            : value >= 3.5 \r\n                            ? 'fas fa-star-half-alt' \r\n                            : 'far fa-star'\r\n                    }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                    className={\r\n                        value >= 5 \r\n                            ? 'fas fa-star' \r\n                            : value >= 4.5 \r\n                            ? 'fas fa-star-half-alt' \r\n                            : 'far fa-star'\r\n                    }\r\n                ></i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#f8e825'\r\n}\r\n\r\nRating.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string,\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({ product }) => {\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top' />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as='div'>\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as='div'>\r\n                    <Rating \r\n                        value={product.rating} \r\n                        text={`${product.numReviews} reviews`}\r\n                    />\r\n                </Card.Text>\r\n\r\n                <Card.Text as='h3'>${product.price}</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info',\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner \r\n            animation='border' \r\n            role='status' \r\n            style={{ \r\n                width: '100px', \r\n                height: '100px', \r\n                margin: 'auto',\r\n                display: 'block'\r\n            }}\r\n        >\r\n           <span className='sr-only'>Loading...</span> \r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n    return pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map(page => (\r\n                <LinkContainer key={page+1} to={!isAdmin ? keyword ? `/search/${keyword}/page/${page+1}` : `/page/${page+1}` : `/admin/productlist/${page+1}`}>\r\n                    <Pagination.Item active={page+1 === page}>{page+1}</Pagination.Item>\r\n                </LinkContainer>\r\n        ))}\r\n        </Pagination>\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <meta name='description' content={description} />\r\n            <meta name='keyword' content={keywords} />\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nMeta.defaultProps = {\r\n    title: 'Welcome To ProShop',\r\n    keywords: 'electronics, buy electronics, cheap electronics',\r\n    description: 'We sell the best products for cheap'\r\n}\r\n\r\nexport default Meta\r\n","import axios from 'axios'\r\nimport { \r\n    PRODUCT_LIST_REQUEST, \r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL, \r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const res =  await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: res.data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const res =  await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: res.data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(\r\n            `/api/products/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/${product._id}`,\r\n            product,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.post(\r\n            `/api/products/${productId}/reviews`,\r\n            review,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const res =  await axios.get(`/api/products/top`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: res.data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nconst ProductCarousel = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { loading, error, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n        <Carousel pause='hover' className='bg-dark'>\r\n            {products.map(product => (\r\n                <Carousel.Item key={product._id}>\r\n                    <Link to={`/product/${product._id}`}>\r\n                        <Image src={product.image} alt={product.name} fluid />\r\n                        <Carousel.Caption className='carousel-caption'>\r\n                            <h2>{product.name} (${product.price})</h2>\r\n                        </Carousel.Caption>\r\n                    </Link>\r\n                </Carousel.Item>\r\n            ))}\r\n        </Carousel>\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, {  useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport Meta from '../components/Meta'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\nconst HomeScreen = ({ match }) => {\r\n    const keyword = match.params.keyword\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const disptach = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, page, pages } = productList\r\n\r\n    useEffect(() => {\r\n        disptach(listProducts(keyword, pageNumber))\r\n    }, [disptach, keyword, pageNumber])\r\n\r\n    return (\r\n        <div>\r\n        <Meta />\r\n        {!keyword ? <ProductCarousel /> : <Link to='/' className='btn btn-light'>Go Back</Link>}\r\n            <h1>Latest Products</h1>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                <div>\r\n                <Row>\r\n                    {products.map((product) => (\r\n                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                            <Product product={product}/>\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n                <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''}/>\r\n                </div>\r\n            )}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, ListGroupItem, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\nimport Meta from '../components/Meta'\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const { success: successProductReview, error: errorProductReview } = productReviewCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if(successProductReview) {\r\n            alert('Review Submitted!')\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        dispatch(createProductReview(match.params.id, {\r\n            rating,\r\n            comment\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link className='btn btn-light my-3' to='/'>\r\n                Go Back\r\n            </Link>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <div>\r\n                    <Meta title={product.name}/>\r\n                    <Row>\r\n                    <Col md={6}>\r\n                        <Image src={product.image} alt={product.name} fluid />\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h3>{product.name}</h3>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                Price: ${product.price}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                Description: ${product.description}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <Card>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            Price:\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <strong>${product.price}</strong>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            Status:\r\n                                        </Col>\r\n                                        <Col>\r\n                                            {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                {product.countInStock > 0  && (\r\n                                    <ListGroupItem>\r\n                                        <Row>\r\n                                            <Col>Qty</Col>\r\n                                            <Col>\r\n                                                <Form.Control \r\n                                                    as='select' \r\n                                                    value={qty} \r\n                                                    onChange={(e) => setQty(e.target.value)}\r\n                                                >\r\n                                                    {[...Array(product.countInStock).keys()].map(x => (\r\n                                                        <option key={x + 1} value={x + 1}>\r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroupItem>\r\n                                )}\r\n\r\n                                <ListGroup.Item>\r\n                                    <Button \r\n                                        onClick={addToCartHandler}\r\n                                        className='btn-block' \r\n                                        type='button' \r\n                                        disabled={product.countInStock === 0}\r\n                                    >\r\n                                        Add To Cart\r\n                                    </Button>\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <h2>Reviews</h2>\r\n                        {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n                        <ListGroup variant='flush'>\r\n                            {product.reviews.map(review => (\r\n                                <ListGroup.Item key={review._id}>\r\n                                    <strong>{review.name}</strong>\r\n                                    <Rating value={review.rating} />\r\n                                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                                    <p>{review.comment}</p>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                            <ListGroup.Item>\r\n                                <h2>Write a Customer Review</h2>\r\n                                {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n                                {userInfo ? (\r\n                                    <Form onSubmit={submitHandler}>\r\n                                        <Form.Group controlId='rating'>\r\n                                            <Form.Label>Rating</Form.Label>\r\n                                            <Form.Control\r\n                                                as='select'\r\n                                                value={rating}\r\n                                                onChange={(e => setRating(e.target.value))}\r\n                                            >\r\n                                                <option value=''>Select...</option>\r\n                                                <option value='1'>1 - Poor</option>\r\n                                                <option value='2'>2 - Fair</option>\r\n                                                <option value='3'>3 - Good</option>\r\n                                                <option value='4'>4 - Very Good</option>\r\n                                                <option value='5'>5 - Exellent</option>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                        <Form.Group controlId='comment'>\r\n                                            <Form.Label>Comment</Form.Label>\r\n                                            <Form.Control \r\n                                                as='textarea'\r\n                                                row='3'\r\n                                                value={comment}\r\n                                                onChange={(e) => setComment(e.target.value)}\r\n                                            ></Form.Control>\r\n                                        </Form.Group>\r\n                                        <Button \r\n                                            type='submit'\r\n                                            variant='primary'\r\n                                        >\r\n                                            Submit\r\n                                        </Button>    \r\n                                    </Form>\r\n                                ) : (\r\n                                    <Message>Please <Link to='/login'>sign in</Link> to write a review</Message>\r\n                                )}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            )}          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const res = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: res.data._id,\r\n            name: res.data.name,\r\n            image: res.data.image,\r\n            price: res.data.price,\r\n            countInStock: res.data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    const productId = match.params.id\r\n\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector((state) => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if(productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message>Your cart is empty <Link to='/'>Go back</Link></Message>\r\n                    ) : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>{item.price}</Col>\r\n                                    <Col md={2}>\r\n                                        <Form.Control \r\n                                            as='select' \r\n                                            value={item.qty} \r\n                                            onChange={(e) => \r\n                                                dispatch(\r\n                                                    addToCart(item.product, Number(e.target.value))\r\n                                                    )\r\n                                                }\r\n                                        >\r\n                                            {[...Array(item.countInStock).keys()].map(x => (\r\n                                                <option key={x + 1} value={x + 1}>\r\n                                                    {x + 1}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button\r\n                                            type='button'\r\n                                            variant='light'\r\n                                            onClick={() =>\r\n                                                removeFromCartHandler(item.product)}\r\n                                            >\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>        \r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )} \r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>\r\n                                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items\r\n                            </h2>\r\n                            $\r\n                                {cartItems\r\n                                    .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                                    .toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button \r\n                                type='button'\r\n                                className='btn-block'\r\n                                disabled={cartItems.length === 0} \r\n                                onClick={checkoutHandler}\r\n                            >\r\n                                Proceed To Checkout\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>                            \r\n                </Card>                                \r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin \r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control \r\n                        type='email' \r\n                        placeholder='Enter email' \r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control \r\n                        type='password' \r\n                        placeholder='Enter password' \r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer?  \r\n                    <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { loading, error, userInfo } = userRegister \r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control \r\n                        type='name' \r\n                        placeholder='Enter name' \r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control \r\n                        type='email' \r\n                        placeholder='Enter email' \r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password Address</Form.Label>\r\n                    <Form.Control \r\n                        type='password' \r\n                        placeholder='Enter password' \r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control \r\n                        type='password' \r\n                        placeholder='Confirm password' \r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                 </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? \r\n                    <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Login\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\n\r\nconst ProfileScreen = ({  history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin \r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile \r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    useEffect(() => {\r\n        if(!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if(!user || !user.name || success) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, user, userInfo, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            // DISPATCH UPDATE PROFILE\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {success && <Message variant='success'>Profile Updated</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control \r\n                            type='name' \r\n                            placeholder='Enter name' \r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control \r\n                            type='email' \r\n                            placeholder='Enter email' \r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password Address</Form.Label>\r\n                        <Form.Control \r\n                            type='password' \r\n                            placeholder='Enter password' \r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control \r\n                            type='password' \r\n                            placeholder='Confirm password' \r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>{errorOrders}</Message> : (\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>\r\n                                        {order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                            <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>\r\n                                        {order.isDelivered ? order.deliveredAt.substring(0, 10) : (\r\n                                            <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm' variant='light'>Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from 'axios'\r\nimport { \r\n    ORDER_CREATE_REQUEST, \r\n    ORDER_CREATE_SUCCESS, \r\n    ORDER_CREATE_FAIL, \r\n    ORDER_DETAILS_REQUEST, \r\n    ORDER_DETAILS_SUCCESS, \r\n    ORDER_DETAILS_FAIL, \r\n    ORDER_PAY_REQUEST, \r\n    ORDER_PAY_SUCCESS, \r\n    ORDER_PAY_FAIL, \r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL\r\n} from '../constants/orderConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders`,\r\n            order, \r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${orderId}/pay`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Sign In</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Shipping</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Payment</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Place Order</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control \r\n                        type='text' \r\n                        placeholder='Enter address' \r\n                        value={address}\r\n                        required\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control \r\n                        type='text' \r\n                        placeholder='Enter city' \r\n                        value={city}\r\n                        required\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control \r\n                        type='text' \r\n                        placeholder='Enter postal code' \r\n                        value={postalCode}\r\n                        required\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control \r\n                        type='text' \r\n                        placeholder='Enter country' \r\n                        value={country}\r\n                        required\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    if(!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        dispatch(savePaymentMethod( paymentMethod))\r\n\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                    <Form.Check \r\n                    type='radio' \r\n                    label='Paypal or Credit Card' \r\n                    id='PayPal' \r\n                    name='paymentMethod' \r\n                    value='PayPal' \r\n                    checked onChange={(e) => setPaymentMethod(e.target.value)}\r\n                    ></Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    // Calculate prices\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce(\r\n        (acc, item) => acc + item.price * item.qty,\r\n        0\r\n    ))\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, success, error } = orderCreate\r\n\r\n    useEffect(() => {\r\n        if(success) {\r\n            history.push(`/order/${order._id}`)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, success])\r\n\r\n    const placeOrderHandler = (e) => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city}, {cart.shippingAddress.postalCode}, {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 \r\n                                ? <Message>Your cart is empty</Message> \r\n                                : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {cart.cartItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>\r\n                                                            {item.name}\r\n                                                        </Link>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} X ${item.price} = ${addDecimals(item.qty * item.price)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='fluid'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button \r\n                                    type='button' \r\n                                    className='btn-block' \r\n                                    disabled={cart.cartItems === 0} \r\n                                    onClick={placeOrderHandler}\r\n                                >\r\n                                    Place Order            \r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport {  Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n    const orderId = match.params.id\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    // Calculate price   \r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n    if(!loading) {\r\n        order.itemsPrice = addDecimals(order.orderItems.reduce(\r\n            (acc, item) => acc + item.price * item.qty,\r\n            0\r\n        ))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        const addPayPalScript = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => {\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n\r\n        if(!order || order._id !== orderId || successPay || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if(!order.isPaid) {\r\n            if(!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, order, successPay, successDeliver, orderId])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult)\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? <Loader /> \r\n        : error ? <Message variant='danger'>{error}</Message> \r\n        : <div>\r\n            <h1>Order {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Name: </strong> {order.user.name}\r\n                            </p>\r\n                            <p>\r\n                                <strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n                            </p>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {order.shippingAddress.address}, {order.shippingAddress.city}, {order.shippingAddress.postalCode}, {order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? (\r\n                                <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                            ) : ( \r\n                                <Message variant='danger'>Not Delivered</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? (\r\n                                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                            ) : ( \r\n                                <Message variant='danger'>Not Paid</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 \r\n                                ? <Message>Order is empty</Message> \r\n                                : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {order.orderItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>\r\n                                                            {item.name}\r\n                                                        </Link>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} X ${item.price} = ${addDecimals(item.qty * item.price)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='fluid'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {!order.isPaid  && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n                                    {!sdkReady ? <Loader /> : (\r\n                                        <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler}/>\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n                            {loadingDeliver && <Loader />}\r\n                            {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                <ListGroup.Item>\r\n                                    <Button type='button' className='btn btn-block' onClick={deliverHandler}>\r\n                                        Mark as Delivered\r\n                                    </Button>\r\n                                </ListGroup.Item>\r\n                            )}\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, {  useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, userInfo, successDelete])\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map(user => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                                <td>\r\n                                    {user.isAdmin ? (\r\n                                        <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                    ) : (\r\n                                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            <i className='fas fa-edit'></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails \r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdate \r\n\r\n    useEffect(() => {\r\n       if(successUpdate) {\r\n           dispatch({ type: USER_UPDATE_RESET })\r\n           history.push('/admin/userlist')\r\n       } else {\r\n            if(!user.name || user._id !== userId) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n       }\r\n    }, [dispatch, history, userId, user, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/userList' className='btn btn-light my-3'>\r\n                Go back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control \r\n                                type='name' \r\n                                placeholder='Enter name' \r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='email'>\r\n                            <Form.Label>Email Address</Form.Label>\r\n                            <Form.Control \r\n                                type='email' \r\n                                placeholder='Enter email' \r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='isadmin'>\r\n                            <Form.Check \r\n                                type='checkbox' \r\n                                label='Is Admin' \r\n                                checked={isAdmin}\r\n                                onChange={(e) => setIsAdmin(e.target.checked)}\r\n                            ></Form.Check>\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' variant='primary'>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                )}              \r\n            </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, {  useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET }  from '../constants/productConstants'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, page, pages } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { \r\n        loading: loadingDelete, \r\n        error: errorDelete, \r\n        success: successDelete \r\n    } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { \r\n        loading: loadingCreate, \r\n        error: errorCreate, \r\n        success: successCreate, \r\n        product: createdProduct \r\n    } = productCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if(!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if(successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts('', pageNumber))\r\n        }\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, pageNumber])\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <div>\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>PRICE</th>\r\n                            <th>CATEGORY</th>\r\n                            <th>BRAND</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {products.map(product => (\r\n                            <tr key={product._id}>\r\n                                <td>{product._id}</td>\r\n                                <td>{product.name}</td>\r\n                                <td>${product.price}</td>\r\n                                <td>{product.category}</td>\r\n                                <td>{product.brand}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            <i className='fas fa-edit'></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                <Paginate pages={pages} page={page} isAdmin={true}/>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState()\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails \r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = productUpdate \r\n\r\n    useEffect(() => {\r\n        if(successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {            \r\n            if(!product.name || product._id !== productId) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }\r\n       \r\n    }, [dispatch, history, productId, product, successUpdate])\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n        \r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        \r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            description,\r\n            countInStock\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n                Go back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control \r\n                                type='name' \r\n                                placeholder='Enter name' \r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='price'>\r\n                            <Form.Label>Price</Form.Label>\r\n                            <Form.Control \r\n                                type='number' \r\n                                placeholder='Enter price' \r\n                                value={price}\r\n                                onChange={(e) => setPrice(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='image'>\r\n                            <Form.Label>Image</Form.Label>\r\n                            <Form.Control \r\n                                type='text' \r\n                                placeholder='Enter image url' \r\n                                value={image}\r\n                                onChange={(e) => setImage(e.target.value)}\r\n                            ></Form.Control>\r\n                            <Form.File \r\n                                id='image-file' \r\n                                label='Choose File' \r\n                                custom \r\n                                onChange={uploadFileHandler}\r\n                            ></Form.File>\r\n                            {uploading && <Loader />}\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='brand'>\r\n                            <Form.Label>Brand</Form.Label>\r\n                            <Form.Control \r\n                                type='text' \r\n                                placeholder='Enter brand' \r\n                                value={brand}\r\n                                onChange={(e) => setBrand(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='countinstock'>\r\n                            <Form.Label>Count</Form.Label>\r\n                            <Form.Control \r\n                                type='number' \r\n                                placeholder='Enter count in stock' \r\n                                value={countInStock}\r\n                                onChange={(e) => setCountInStock(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='category'>\r\n                            <Form.Label>Category</Form.Label>\r\n                            <Form.Control \r\n                                type='text' \r\n                                placeholder='Enter category' \r\n                                value={category}\r\n                                onChange={(e) => setCategory(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='description'>\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control \r\n                                type='text' \r\n                                placeholder='Enter description' \r\n                                value={description}\r\n                                onChange={(e) => setDescription(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' variant='primary'>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                )}              \r\n            </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, {  useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>USER</th>\r\n                            <th>DATE</th>\r\n                            <th>TOTAL</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERED</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user && order.user.name}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>${order.totalPrice}</td>\r\n                                <td>\r\n                                    {order.isPaid ? (\r\n                                        order.paidAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    {order.isDelivered ? (\r\n                                        order.deliveredAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            Details\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\nconst App = () => {\n  return (\n      <Router>\n        <Header />\n        <main className='py-3'>\n          <Container>\n            <Route path='/order/:id' component={OrderScreen}/>\n            <Route path='/shipping' component={ShippingScreen}/>\n            <Route path='/payment' component={PaymentScreen}/>\n            <Route path='/placeorder' component={PlaceOrderScreen}/>\n            <Route path='/login' component={LoginScreen}/>\n            <Route path='/register' component={RegisterScreen}/>\n            <Route path='/profile' component={ProfileScreen}/>\n            <Route path='/product/:id' component={ProductScreen}/>\n            <Route path='/cart/:id?' component={CartScreen}/>\n            <Route path='/admin/userlist' component={UserListScreen}/>\n            <Route path='/admin/user/:id/edit' component={UserEditScreen}/>\n            <Route path='/admin/productlist' component={ProductListScreen} exact/>\n            <Route path='/admin/productlist/:pageNumber' component={ProductListScreen} exact/>\n            <Route path='/admin/product/:id/edit' component={ProductEditScreen}/>\n            <Route path='/admin/orderlist' component={OrderListScreen}/>\n            <Route path='/search/:keyword' component={HomeScreen} exact/>\n            <Route path='/page/:pageNumber' component={HomeScreen} exact/>\n            <Route path='/search/:keyword/page/:pageNumber' component={HomeScreen} exact/>\n            <Route path='/' component={HomeScreen} exact/>\n          </Container>\n        </main>\n        <Footer />\n      </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}